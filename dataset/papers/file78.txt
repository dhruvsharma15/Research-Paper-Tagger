Since humans amass more and more generally available data in the form of unstructured text it would be very useful to teach machines to read and comprehend such data and then use this understand- ing to answer our questions. A significant amount of research has recently focused on answering one particular kind of questions the answer to which de- pends on understanding a context document. These are cloze-style questions (Taylor, 1953) which re- quire the reader to fill in a missing word in a sen- tence. An important advantage of such questions is that they can be generated automatically from a suitable text corpus which allows us to produce a 2. it is widely accepted that more data can signif- icantly improve performance of most mod- els ( Banko and Brill, 2001;Halevy et al., 2009);3. training a model takes only about two hours on the CBT or about two days on the Daily Mail dataset, the largest of the three sets, therefore these datasets are not allowing us to fully use current computing potential;time models were being compared on several "stan- dard" datasets with publications often presenting minuscule improvements in performance. Then the large-scale One Billion Word corpus dataset appeared ( Chelba et al., 2014) and it allowed Joze- fowicz et al. to train much larger LSTM mod- els ( Jozefowicz et al., 2016) that almost halved the state-of-the-art perplexity on this dataset. We think it is time to make a similar step in the area of text comprehension. Hence we are intro- ducing the BookTest, a new dataset very similar to the Children's Book test but more than 60 times larger 1 to enable training larger models even in the domain of text comprehension. Furthermore the methodology used to create our data can later be used to create even larger datasets when the need arises thanks to further technological progress.We show that if we evaluate a model trained on the new dataset on the now standard Children's Book Test dataset, we see an improvement in ac- curacy much larger than other research groups achieved by enhancing the model architecture it- self (while still using the original CBT training data). By training on the new dataset, we reduce the prediction error by almost one third. On the named-entity version of CBT this brings the ensem- ble of our models to the level of human baseline as reported by Facebook (Hill et al., 2015). How- ever in the final section we show in our own human study that there is still room for improvement on the CBT beyond the performance of our model. W 3 . We also assume that all possible answers are words from the vocabulary, that is A ⊆ W . In the CBT and CNN/Daily Mail datasets it is also true that the ground-truth answer a appears in the docu- ment. This is exploited by many machine learning models ( Hill et al., 2015;Kadlec et al., 2016;Sordoni et al., 2016;Dhingra et al., 2016;Trischler et al., 2016b;Cui et al., 2016b;Cui et al., 2016a;Li et al., 2016), however some do not explicitly depend on this property ( Hermann et al., 2015;Kobayashi et al., 2016;Chen et al., 2016;Weissenborn, 2016) 3 Current LandscapeWe will now briefly review what datasets for text comprehension have been published up to date and look at models which have been recently applied to solving the task we have just described.A natural way of testing a reader's comprehension of a text is to ask her a question the answer to which can be deduced from the text. Hence the task we are trying to solve consists of answering a cloze- style question, the answer to which depends on the understanding of a context document provided with the question. The model is also provided with a set of possible answers from which the correct one is to be selected 2 . This can be formalized as follows:The training data consist of tuples (q, d, a, A), where q is a question, d is a document that contains the answer to question q, A is a set of possible an- swers and a ∈ A is the ground-truth answer. Both q and d are sequences of words from vocabulary A crucial condition for applying deep-learning tech- niques is to have a huge amount of data available for training. For question answering this specifi- cally means having a large number of document- question-answer triples available. While there is an unlimited amount of text available, coming up with relevant questions and the corresponding an- swers can be extremely labour-intensive if done by human annotators. There were efforts to provide such human-generated datasets, e.g. Microsoft's MCTest ( Richardson et al., 2013), however their scale is not suitable for deep learning without pre- training on other data (Trischler et al., 2016a) (such as using pre-trained word embedding vectors).Google DeepMind managed to avoid this scale issue with their way of generating document- question-answer triples automatically, closely fol- lowed by Facebook with a similar method. Let us now briefly introduce the two resulting datasets whose properties are summarized in Table 1.These two datasets ( Hermann et al., 2015) exploit a useful feature of online news articles -many articles include a short summarizing sentence near the top of the page. Since all information in the summary sentence is also presented in the article body, we get a nice cloze-style question about the article contents by removing a word from the short summary. The dataset's authors also replaced all named entities in the dataset by anonymous tokens which are further shuffled for each new batch. This forces the model to rely solely on information from the context document, not being able to transfer any meaning of the named entities between documents.This restricts the task to one specific aspect of context-dependent question answering which may be useful however it moves the task further from the real application scenario, where we would like the model to use all information available to an- swer questions. Furthermore Chen et al. (Chen et al., 2016) have suggested that this can make about 17% of the questions unanswerable even by hu- mans. They also claim that more than a half of the question sentences are mere paraphrases or ex- act matches of a single sentence from the context document. This raises a question to what extent the dataset can test deeper understanding of the articles.focus only on these two word types.The Children's Book Test (Hill et al., 2015) uses a different source -books freely available thanks to Project Gutenberg 4 . Since no summary is avail- able, each example consists of a context document formed from 20 consecutive sentences from the story together with a question formed from the sub- sequent sentence.The dataset comes in four flavours depending on what type of word is omitted from the question sentence. Based on human evaluation done in ( Hill et al., 2015) it seems that named entities (NEs) and common nouns (CNs) are more context dependent than the other two types -prepositions and verbs. Therefore we (and all of the recent publications)Several new datasets related to the (now almost standard) ones above emerged recently. We will now briefly present them and explain how the dataset we are introducing in this article differs from them.The LAMBADA dataset ( Paperno et al., 2016) is designed to measure progress in understanding common-sense questions about short stories that can be easily answered by humans but cannot be answered by current standard machine-learning models (e.g. plain LSTM language models). This dataset is useful for measuring the gap between humans and machine learning algorithms. How- ever, by contrast to our BookTest dataset, it will not allow us to track progress towards the per- formance of the baseline systems or on examples where machine learning may show super-human performance. Also LAMBADA is just a diagnostic dataset and does not provide ready-to-use question- answering training data, just a plain-text corpus which may moreover include copyrighted books making its use potentially problematic for some purposes. We are providing ready training data consisting of copyright-free books only.The SQuAD dataset (Rajpurkar et al., 2016) based on Wikipedia and the Who-did-What dataset ( Onishi et al., 2016) based on Giga- word news articles are factoid question-answering datasets where a multi-word answer should be ex- tracted from a context document. This is in contrast to the previous datasets, including CNN/DM, CBT, LAMBADA and our new dataset, which require only single-word answers. Both these datasets how- ever provide less than 130,000 training questions, two orders of magnitude less than our dataset does.The Story Cloze Test (Mostafazadeh et al., 2016) provides a crowd-sourced corpus of 49,255 com- monsense stories for training and 3,744 testing stories with right and wrong endings. Hence the dataset is again rather small. Similarly to LAM- BADA, the Story Cloze Test was designed to be easily answerable by humans.In the WikiReading ( Hewlett et al., 2016) dataset the context document is formed from a Wikipedia article and the question-answer pair is taken from the corresponding WikiData page. For each en- tity (e.g. Hillary Clinton), WikiData contain a number of property-value pairs (e.g. place of birth: Chicago) which form the datasets's question- answer pairs. The dataset is certainly relevant to the community, however the questions are of very limited variety with only 20 properties (and hence unique questions) covering 75% of the dataset. Fur- thermore many of the frequent properties are men- tioned at a set spot within the article (e.g. the date of birth is almost always in brackets behind the name of a person) which may make the task eas- ier for machines. We are trying to provide a more varied dataset.Although there are several datasets related to task we are aiming to solve, they differ sufficiently for our dataset to bring new value to the community. Its biggest advantage is its size which can further- more be easily upscaled without expensive human annotation. Finally while we are emphasizing the differences, models could certainly benefit from as diverse a collection of datasets as possible. spirit to models recently proposed in different do- mains, e.g. (dos Santos et al., 2016) in information retrieval. Other neural approaches to text compre- hension are explored in (Weissenborn, 2016;Li et al., 2016).Accuracy in any machine learning tasks can be enhanced either by improving a machine learning model or by using more in-domain training data. Current state of the art models ( Sordoni et al., 2016The other possibility to improve performance is simply to use more training data. The impor- tance of training data was highlighted by the fre- quently quoted Mercer's statement that "There is no data like more data." 5 The observation that hav- ing more data is often more important than having better algorithms has been frequently stressed since then ( Banko and Brill, 2001;Halevy et al., 2009).As a step in the direction of exploiting the po- tential of more data in the domain of text compre- hension, we created a new dataset called BookTest similar to, but much larger than the widely used CBT and CNN/DM datasets.A first major work applying deep-learning tech- niques to text comprehension was Hermann et al. (Hermann et al., 2015). This work was fol- lowed by the application of Memory Networks to the same task ( Hill et al., 2015). Later three mod- els emerged around the same time ( Kobayashi et al., 2016;Kadlec et al., 2016;Chen et al., 2016 Similarly to the CBT, our BookTest dataset 6 is de- rived from books available through project Guten- berg. We used 3555 copyright-free books to extract CN examples and 10507 books for NE examples, for comparison the CBT dataset was extracted from just 108 books.When creating our dataset we follow the same procedure as was used to create the CBT dataset ( Hill et al., 2015). That is, we detect whether each sentence contains either a named entity or a common noun that already appeared in one of the preceding twenty sentences. This word is then replaced by a gap tag (XXXXX) in this sentence which is hence turned into a cloze- style question. The preceding 20 sentences are used as the context document. For common noun and named entity detection we use the Stanford POS tagger ( Toutanova et al., 2003) and Stanford NER ( Finkel et al., 2005)  7 .The training dataset consists of the original CBT NE and CN data extended with new NE and CN examples. The new BookTest dataset hence contains 14, 140, 825 training examples and 7, 917, 523, 807 tokens.The validation dataset consists of 10, 000 NE and 10, 000 CN questions. We have one test set for NEs and one for CNs, each containing 10, 000 ex- amples. The training, validation and test sets were generated from non-overlapping sets of books.When generating the dataset we removed all edi- tions of books used to create CBT validation and test sets from our training dataset. Therefore the models trained on the BookTest corpus can be eval- uated on the original CBT data and they can be compared with recent text-comprehension models utilizing this dataset ( Hill et al., 2015;Kadlec et al., 2016;Chen et al., 2016;Sordoni et al., 2016;Dhingra et al., 2016;Trischler et al., 2016b;Weissenborn, 2016;Cui et al., 2016b;Cui et al., 2016a). many subsequent models (Trischler et al., 2016b;Sordoni et al., 2016;Dhingra et al., 2016;Cui et al., 2016b;Cui et al., 2016a;Shen et al., 2016).Let us now describe the model in more detail. Figure 1 may help you in understanding the follow- ing paragraphs.We will now use our AS Reader model to evaluate the performance gain from increasing the dataset size.In ( Kadlec et al., 2016) we introduced the AS Reader 8 , which at the time of publication signifi- cantly outperformed all other architectures on the CNN, DM and CBT datasets. This model is built to leverage the fact that the answer is a single word from the context document. Similarly to many other models it uses attention over the document -intuitively a measure of how relevant each word is to answering the question. However while most previous models used this attention as weights to calculate a blended representation of the answer word, we simply sum the attention across all occur- rences of each unique words and then simply select the word with the highest sum as the final answer. While simple, this trick seems both to improve ac- curacy and to speed-up training. It was adopted byThe words from the document and the question are first converted into vector embeddings using a look-up matrix V. The document is then read by a bidirectional GRU network ( Cho et al., 2014). A concatenation of the hidden states of the forward and backward GRUs at each word is then used as a contextual embedding of this word, intuitively representing the context in which the word is ap- pearing. We can also understand it as representing the set of questions to which this word may be an answer.Similarly the question is read by a bidirectional GRU but in this case only the final hidden states are concatenated to form the question embedding.The attention over each word in the context is then calculated as the dot product of its contextual embedding with the question embedding. This at- tention is then normalized by the softmax function and summed across all occurrences of each answer candidate. The candidate with most accumulated attention is selected as the final answer.For a more detailed description of the model including equations check ( Kadlec et al., 2016). More details about the training setup and model hyperparameters can be found in the Appendix. 7 We use version 3.6.0 of both NER and POS tag- gers.For POS tagging we use the model stanford- postagger-full-2015-12-09/wsj-0-18-bidirectional- distsim.tagger and for NER we use stanford-ner-2015- 12-09/english.all.3class.distsim.crf.ser.gz.8 AS Reader is available at https://github.com/ rkadlec/asreader During our past experiments on the CNN, DM and CBT datasets ( Kadlec et al., 2016) each unique word from the training, validation and test datasets had its row in the look-up matrix V. However as we radically increased the dataset size, this would result in an extremely large number of model pa- rameters so we decided to limit the vocabulary size to 200, 000 most frequent words. For each exam- ple, each unique out-of-vocabulary word is now mapped on one of 1000 anonymous tokens which are randomly initialized and untrained. Fixing the embeddings of these anonymous tags proved to significantly improve the performance.While mostly using the original AS Reader model, we have also tried introducing a minor tweak in some instances of the model. We tried initializing the context encoder GRU's hidden state by letting the encoder read the question first before proceed- ing to read the context document. Intuitively this allows the encoder to know in advance what to look for when reading over the context document.Including models of this kind in the ensemble helped to improve the performance. Table 2 shows the accuracy of the AS Reader and other architectures on the CBT validation and test data. The last two rows show the performance of the AS Reader trained on the BookTest dataset; all the other models have been trained on the original CBT training data.If we take the best AS Reader ensemble trained on CBT as a baseline, improving the model archi- tecture as in ( Sordoni et al., 2016;Dhingra et al., 2016;Trischler et al., 2016b;Weissenborn, 2016;Cui et al., 2016b;Cui et al., 2016a), continuing to use the original CBT training data, lead to im- provements of 1% and 2.1% absolute on named entities and common nouns respectively. By con- trast, inflating the training dataset provided a boost of 7.4 − 14.8% while using the same model. The ensemble of our models even exceeded the human baseline provided by Facebook ( Hill et al., 2015) on the Common Noun dataset.Our model takes approximately two weeks to converge when trained on the BookTest dataset on a single Nvidia Tesla K40 GPU.Embracing the abundance of data may mean focus- ing on other aspects of system design than with smaller data. Here are some of the challenges that we need to face in this situation.Firstly, since the amount of data is practically un- limited -we could even generate them on the fly re- sulting in continuous learning similar to the Never- Ending Language Learning by Carnegie Mellon University ( Mitchell et al., 2015) -it is now the speed of training that determines how much data the model is able to see. Since more training data significantly help the model performance, focus- ing on speeding up the algorithm may be more important than ever before. This may for instance influence the decision whether to use regulariza- tion such as dropout which does seem to somewhat improve the model performance, however usually at a cost of slowing down training.Thanks to its simplicity, the AS Reader seems to be training fast -for example around seven times faster than the models proposed by Chen et al. (Chen et al., 2016). Hence the AS Reader may be particularly suitable for training on large datasets.The second challenge is how to generalize the performance gains from large data to a specific tar- get domain. While there are huge amounts of natu- ral language data in general, it may not be the case in the domain where we may want to ultimately apply our model.Hence we are usually not facing a scenario of simply using a larger amount of the same training data, but rather extending training to a related do- main of data, hoping that some of what the model  learns on the new data will still help it on the origi- nal task. This is highlighted by our observations from applying a model trained on the BookTest to Chil- dren's Book Test test data. If we move model train- ing from joint CBT NE+CN training data 9 to a subset of the BookTest of the same size (230k ex- amples), we see a drop in accuracy of around 10% on the CBT test datasets.Hence even though the Children's Book Test and BookTest datasets are almost as close as two disjoint datasets can get, the transfer is still very imperfect 10 . Rightly choosing data to augment the in-domain training data is certainly a problem worth exploring in future work.Our results show that given enough data the AS Reader was able to exceed the human performance on CBT CN reported by Facebook. However we hypothesized that the system is still not achieving its full potential so we decided to examine the room for improvement in our own small human study. 9 Note that while here we are using joint CBT NE+CN data to create an equivalent of a 230k subset of our BookTest, for most experiments on the CBT we and some other teams have used NE and CN as two separate training datasests. 10 This also suggests that the increase in accuracy when using more data that are strictly in the same domain as the original training data results in a performance increase even larger that the one we are reporting on CBT. However the scenario of having to look for additional data elsewhere is more realistic, so we are focusing this article in that direction.After adding more data we have the performance on the CBT validation and test datasets soaring. However is there still potential for much further growth beyond the results we have observed?We decided to explore the remaining space for improvement on the CBT by testing humans on a random subset of 50 named entity and 50 common noun validation questions that the AS Reader en- semble could not answer correctly. These questions were answered by 10 non-native English speakers from our research laboratory, each on a disjoint subset of questions.. Participants had unlimited time to answer the questions and were told that these questions were not correctly answered by a machine, providing additional motivation to prove they are better than computers. The results of the human study are summarized in Table 3. They show that a majority of questions that our system could not answer so far are in fact answerable. This suggests that 1) the original human baselines might have been underestimated, however, it might also be the case that there are some examples that can be answered by machines and not by humans; 2) there is still space for improvement.A system that would answer correctly every time when either our ensemble or human answered cor- rectly would achieve accuracy over 92% percent on both validation and test NE datasets and over 96% on both CN datasets. Hence it still makes sense to Named Entities 66% Common Nouns 82% Table 3: Accuracy of human participants on ex- amples from validation set that were previously incorrectly answered by our system trained only on the BookTest data.[ Few ways of improving model performance are as solidly established as using more training data. Yet we believe this principle has been somewhat neglected by recent research in text comprehen- sion. While there is a practically unlimited amount of data available in this field, most research was performed on unnecessarily small datasets. As a gentle reminder to the community we have shown that simply infusing a model with more data can yield performance improvements of up to 14.8% where several attempts to improve the model architecture on the same training data have given gains of at most 2.1% compared to our best en- semble result. Yes, experiments on small datasets certainly can bring useful insights. However we believe that the community should also embrace the real-world scenario of data abundance.The BookTest dataset we are proposing gives the reading-comprehension community an opportunity to make a step in that direction.
