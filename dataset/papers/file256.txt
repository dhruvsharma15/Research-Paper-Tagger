To provide machines with common sense is one of the ma- jor long term goals of artificial intelligence. Common sense knowledge regards knowledge that humans have acquired through a lifetime of experiences. It is crucial in language understanding because a lot of content needed for correct understanding is not expressed explicitly but resides in the mind of communicator and audience. In addition, humans rely on their common sense knowledge when performing a variety of tasks including interpreting images, navigation and reasoning, to name a few. Representing and understanding spatial knowledge are in fact imperative for any agent (human, animal or robot) that navigates in a physical world. In this paper, we are interested in acquiring spatial commonsense knowledge from language paired with visual data.Computational and cognitive models often handle spa- tial representations as spatial templates or regions of ac- ceptability for two objects under an explicit (a.k.a. deic- tic) spatial preposition such as "on", "below" or "left" (Logan and Sadler 1996). Contrary to previous work that con- ceives spatial templates only for explicit spatial language (Malinowski and Fritz 2014;Moratz and Tenbrink 2006;Logan and Sadler 1996), we extend such concept to im- plicit (a.k.a. intrinsic) spatial language, i.e., relationships- generally actions-that do not explicitly define the relative spatial configuration between the two objects (e.g., "glass on table") but only implicitly (e.g., "woman riding horse"). In other words, implicit spatial templates capture the com- mon sense spatial knowledge that humans possess and is not explicit in the language utterances.Predicting spatial templates for implicit relationships is no- tably more challenging than for explicit relationships. Firstly, whereas there are only a few tens of explicit spatial preposi- tions, there exist thousands of actions, entailing thus a drastic increase in the sparsity of (object 1 , relationship, object 2 ) combinations. Secondly, the complexity of the task radically increases in implicit language. More precisely, while explicit spatial prepositions 1 are highly deterministic about the spatial arrangements (e.g., (object 1 , below, object 2 ) unequivocally implies that object 1 is relatively lower than object 2 ), actions generally are not. E.g., the relative spatial configuration of "man" and the object is clearly distinct in (man, pulling, kite) than in (man, pulling, luggage) yet the action is the same. Contrarily, other relationships such as "jumping" are highly informative about the spatial template, i.e., in (object 1 , jump- ing, object 2 ), object 2 is in a lower position than object 1 . Hence, unlike explicit relationships, predicting spatial lay- outs from implicit spatial language requires spatial common sense knowledge about the objects, actions and their inter- action, which suggests the need of learning to compose the triplet (Subject, Relationship, Object) as a whole instead of learning a template for each Relationship.To systematically study these questions, we propose the task of predicting the relative spatial locations of two objects given a structured text input (Subject, Relationship, Object). We introduce two simple neural-based models trained from annotated images that successfully address the two challenges of implicit spatial language discussed above. Our quantita- tive evaluation reveals that spatial templates can be reliably predicted from implicit spatial language-as accurately as from explicit spatial language. We also show that our models generalize well to templates of unseen combinations, e.g., predicting (man, riding, elephant) without having been ex- posed to such scene before, tackling thus the challenge of sparsity. Furthermore, by leveraging word embeddings, the models can correctly generalize to spatial templates with un- seen words, e.g., predicting (man, riding, elephant) without having ever seen an "elephant" before. Since word embed- dings capture attributes of objects (Collell and Moens 2016), one can reasonably expect that embeddings are informative about the spatial behavior of objects, i.e., their likelihood of exhibiting certain spatial patterns with respect to other ob- jects. For instance, without having ever seen "boots" before but only "sandals", the model correctly predicts the template of (person, wearing, boots) by inferring that, since "boots" are similar to "sandals", they must be worn at the same lo- cation of the "person"'s body. Hence, the model leverages the acquired common sense spatial knowledge to generalize to unseen objects. Furthermore, we provide both, a qualita- tive 2D visualization of the predictions, and an analysis of the learned weights of the network which provide insight into the spatial connotations of words, revealing fundamental differences between implicit and explicit spatial language. The rest of the paper is organized as follows. In Sect. 2 we review related research. In Sect. 3 we first introduce the task of predicting spatial templates and then present two simple neural models. Then, in Sect. 4, we describe our experimental setup. In Sect. 5 we present and discuss our results. Finally, in Sect. 6 we summarize the contributions of this article.(explicit) Relationship, we build a template for each (Subject, Relationship, Object) combination, allowing the template to be determined by the interaction/composition of the Subject, Relationship and Object instead of the Relationship alone. Additionally, the model from Malinowski and Fritz (2014) does not output spatial arrangements of objects, nor can it perform predictions with generalized (unseen) relationships.Leveraging spatial knowledge in tasks. It has been shown that knowledge of the spatial structure in images improves the task of image captioning (Elliott and Keller 2013). These authors manually annotate images with geometric relationships between objects and show that a rule-based caption generation system benefits from this knowledge. In contrast to this work, our interest lies in predicting spatial arrangements of objects from text instead of generating text given images. Furthermore, while they employ a small domain of only 10 actions, our goal is to learn from frequent spatial configurations and generalize these to unseen and rare objects/actions (and their combinations). Spatial knowledge has also improved object recognition ( Shiang et al. 2017). These authors mine texts and labeled images to obtain spatial knowledge in the form of object co-occurrences and their relative positions. This knowledge is represented in a graph and a random walk algorithm over this graph results in a ranking of possible object labellings. Contrarily, our representations of spatial knowledge are neural network based, are not primarily used for object recognition, and we furthermore predict spatial templates.Spatial processing has drawn significant attention from the cognitive ( Logan and Sadler 1996) and artificial intelligence communities ( Kruijff et al. 2007). More specif- ically, spatial understanding is essential in tasks involving text-to-scene conversion such as robots' understanding of natural language commands ( Guadarrama et al. 2013;Moratz and Tenbrink 2006) or robot navigation.Spatial templates. Earlier approaches have predomi- nantly considered rule-based spatial representations ( Kruijff et al. 2007;Moratz and Tenbrink 2006). In contrast, Malinowski and Fritz (2014) propose a learning-based pooling approach to retrieve images given queries of the form (object 1 , spatial preposition, object 2 ). They learn the parame- ters of a spatial template for each explicit spatial preposition (e.g., "left" or "above") which computes a soft spatial fit of two objects under the relationship. E.g., an object to the left of the referent object obtains a high score for the "left" template and low for the "right" template. Contrary to them, we consider implicit spatial language instead of explicit. Additionally, while they build a spatial template for each Common sense spatial knowledge. Yatskar, Ordonez, and Farhadi (2016) propose a model to extract common sense facts from annotated images and their textual de- scriptions using co-occurrence statistics among which is point-wise mutual information (PMI). These facts include six spatial relationships ("on", "under", "touches", "above", "besides", "holds", "on", and "disconnected"). The result is a symbolic (discretized) representation of common sense knowledge in the form of relations between objects that logically entail other relational facts. Our method also extracts common sense knowledge from images and text, but predicts (continuous) spatial templates. Lin and Parikh (2015) leverage common sense visual knowledge (e.g., object locations and co-occurrences) in the tasks of fill-in-the-blank and visual paraphrasing. They compute the likelihood of a scene to identify the most likely answer to multiple-choice textual scene descriptions. In contrast, we focus solely on spatial information-and in assuring the correctness of our spatial predictions-rather than on scene understanding.Image generation. Although models that generate images from text exist (e.g., DRAW model ( Gregor et al. 2015)), their focus is quite distant from producing "spatially sensible" images and they are generally meant to generate a single object rather than placing it relative to other objects.As discussed, spatial knowledge can improve a wide range of tasks ( Shiang et al. 2017;Lin and Parikh 2015;Elliott and Keller 2013). This suggests that the predictions Obj.(S c x , S c y)Obj.O b y 1 1 1 0 0 such as "if a man is feeding a horse, where is the man relative to the horse?" or "where would a child wear her shoes?" To build a mapping from the input to the output in our task (Sect. 3.1) we propose two simple neural models ( Fig. 1).Their architecture is identical in the input and representation layers, yet they differ in the output and loss function.man flying kite Obj. Rel. Subj.Figure 1: Overview of our models (left) and the image pre- processing setting (right).(i) Input and representation layers. An embedding layer maps the three input words (S, R, O) to their respec-k.a. one-of-k encoding, i.e., a sparse vector with 0 everywhere except for a 1 at the position of the k-th word) andof our models can be used as spatial common sense input for methods that rely on good spatial priors. Additionally, existing methods require the spatial information to be present in the data and lack the capacity to extrapolate/generalize. Thus, in this paper we focus, first, on showing that generalizing spatial arrangements to unseen objects and object-relation-object combinations is possible and, second, on ensuring that the predicted templates are accurate by performing several quantitative and qualitative evaluations.their embedding matrices with |V S |, |V R |, |V O | their vocab- ulary sizes. This layer represents objects and relationships as continuous features, enabling thus to introduce external knowledge of unseen objects as features. The embeddings are then concatenated with the Subject center S c and sizewhich is inputted to a stack of hidden layers that compose S, R and O into a joint hidden representation z h :3 Proposed task and model where f (·) is an element-wise non-linear function and W h and b h are the weight matrix and bias respectively. To learn spatial templates, we propose the task of predicting the 2D relative spatial arrangement of two objects under a relationship given a structured text input of the form (Subject, Relationship, Object)-henceforth abbreviated as (S, R, O). Let us denote the 2D coordinates of the center ("c") of the Object's box as O c = [O (ii) Output and loss. We consider two different possibilities for the outputˆyoutputˆ outputˆy that follows immediately after the last layer: (Fig. 1, top left).  given the structured text input (S, R, O) and the location S c and size S b of the Subject (Fig. 1). 2 This defines a supervised task where the size and location of bounding boxes in images serve as ground truth. Our task can be interpreted as a spatial question-answering with structured questions (triplets) that allows evaluating the answer quantitatively in a 2D space. Hence, the goal is to answer common sense spatial questions• Model 2 (PIX). The outputˆyoutputˆ outputˆy = σ(z out ) = (ˆ y i,j ) ∈ R M ×M , where M is the number of pixels per side and σ() an element-wise sigmoid, is now a 2D heatmap of pixel activationsˆyactivationsˆ activationsˆy i,j ∈ [0, 1] indicating the probability that a pixel belongs to the Object (class 1). PredictionsˆyPredictionsˆ Predictionsˆy are eval- uated against the true y = (y i,j ) ∈ R M ×M with a binary cross-entropy loss:, where y i,j ∈ {0, 1}.We employ a 10-fold cross-validation (CV) setting. Data are randomly split into 10 disjoint parts and 10% is employed for testing and 90% for training, repeating this for each of the 10 folds. Reported results are averages over the 10 folds.We use the Visual Genome dataset ( Krishna et al. 2017) as our source of annotated images. The Visual Genome consists of ∼108K images containing ∼1.5M human-annotated (Sub- ject, Relationship, Object) instances with bounding boxes for Subject and Object (Fig. 2). We filter out all the instances con- taining explicit spatial prepositions, preserving only instances with implicit spatial relationships. We keep only combina- tions for which we have word embeddings available for the whole triplet (S, R, O). After this filtering, ∼378K instances are preserved, yielding 2,183 unique implicit Relationships and 5,614 unique objects (i.e., Subjects and Objects). The left out instances of explicit language yield ∼852K instances, 36 unique explicit spatial prepositions and 6,749 unique objects.When enforcing generalization conditions in our experi- ments, all combinations from sets (ii) and (iii) are removed from the training data to prevent the model from seeing them. 7 Even without imposing generalization conditions (or when testing with Raw data), reported results are always on unseen instances-yet the combinations (S, R, O) may have been seen during training (e.g., in different images). All sets above contain exclusively implicit spatial language, although an analogous version of the Raw set where R are explicit spatial prepositions is also considered in our experiments.dog, catches, frisbee boy, feeds, giraffe man, throws, frisbee cat, wears glassesThe coordinates of bounding boxes in the images are normal- ized by the width and height of the image. Thus,2 . Additionally, we notice that the distinction between left and right is arbitrary regarding the semantics of the im- age (Singhal, Luo, and Zhu 2003). That is, a mirrored image preserves entirely its meaning-while a vertically inverted image does not. For example, a "child" "walking" a "horse" can meaningfully be at either side of the "horse", while a "child" "riding" a "horse" cannot be either above or below the "horse". Hence, to free the model from such arbitrariness, we mirror the image when (and only when) the Object is at the left hand side of the Subject. This leaves the Object always to the right-hand side of the Subject. Notice that mir- roring is aimed at properly measuring performance and does not impose any big constraint (one can simply consider the symmetric reflection of the predictions as equally likely). We consider the following subsets of the Visual Genome data to evaluate performance. (i) Raw data: Simply the unfiltered instances from the Visual Genome data (Sect. 4.1). This set contains a substantial pro- portion of meaningless (e.g., (nose, almost, touching)) and irrelevant (e.g., (sign, says, gate 2)) instances.(ii) Generalized Triplets: We pick at random 100 combi- nations (S, R, O) among the 1,000 most frequent implicit combinations in Visual Genome. This yields ∼25K instances such as (person, holding, racket), (man, flying, kite), etc. (iii) Generalized Words: We randomly choose 25 objects (e.g., "woman", "apple", etc.) 5 among the 100 most frequent objects in Visual Genome and take all the instances (∼130K) that contain any of these words. For example, since "apple" is in our list, e.g., (cat, sniffing, apple) is kept. 6 Notice that a combination (S, R, O) with a generalized word is automati- cally a generalized triplet too.where B O and B O are the predicted and ground truth Object bounding boxes, respectively. If the IoU is larger than 50%, the prediction is counted as correct. It must be noted that our setting is not comparable to object detection (nor our results) since we do not employ the image as input (but text) and thus we cannot leverage the pixels to predict the Object's location. 4 This evaluation set along with our Supplementary material are available at https://github.com/gcollell/spatial-commonsense. 5 The complete list of objects is: [surfboard, shadow, head, surfer, woman, bear, bag, sunglasses, hair, apple, grass, water, eye, shoes, foot, jeans, jacket, bus, bike, cat, sky, elephant, tree, plane, eyes]. 6 We also evaluated a list of generalized Relationships, obtaining similar results. We additionally tested two extra lists of generalized objects, which yielded consistent results.(B) Regression. We consider standard regression metrics. 7 To avoid confusion with the term 'zero-shot' in classification, we denote our unseen words/triplets as generalized. Although both settings have resemblances, they differ in that, in ours, the unseen categories are inputs while in classification are targets. Notice that in both settings one must necessarily have semantic knowledge about the "zero-shot" class at hand ( Socher et al. 2013) (e.g., in the form of word embeddings), otherwise the task is clearly infeasible.    (D) Pixel (macro) accuracy. The IoU on pixels is equiv- alent to binary pixel accuracy. However, this is not a good measure here, where class 1 (Object box) comprises, on av- erage, only 5% of the pixels. Thus, a constant prediction of zeros everywhere would obtain 95% accuracy. Hence, we consider macro-averaged pixel accuracy, a.k.a. mean IoU (mIoU) (Long, Shelhamer, and Darrell 2015) and report the best mIoU across the full range of decision thresholds.consider a control method (ctrl) that outputs random normal predictions of µ and σ equal to the dimension-wise mean and standard deviation of the training targets. We test statistical significance with a Friedman rank test and post hoc Nemenyi tests on the results of the 10 folds. We indicate with an aster- isk * in the tables when a method is significantly better than the rest (p &lt; 0.01) within the same model (PIX or REG).We use 300-dimensional GloVe word embeddings (Penning- ton, Socher, and Manning 2014) pre-trained on the Common Crawl corpus (consisting of 840B-tokens), which we obtain from the authors' website. 8 Our experiments are implemented in Python 2.7 and we use Keras deep learning framework for our models (Chollet and others 2015). Model hyperparameters are first selected in a 10- fold cross-validation setting and we report (averaged) results on 10 new splits. Models are trained for 10 epochs on batches of size 64 with the RMSprop optimizer using a learning rate of 0.0001 and 2 hidden layers with 100 ReLu units. We find that the models are not very sensitive to parameter variations. The parameters of the embeddings are not backpropagated, although we find that this choice has little effect on the results. We employ a 15 × 15 pixel grid as output of the PIX model. Table 1 shows that all methods perform well considering the amount of noise present in the Raw data. Especially note- worthy is the finding that relative locations can be predicted from implicit spatial language approximately as accurately as from explicit spatial language. Interestingly, unlike the other metrics, the IoU (which only counts a prediction as correct if the overlap between true and predicted boxes is larger than 50%) is clearly higher in explicit than in implicit language, which suggests that implicit templates exhibit more flexibility on the Object's location. Hence, "blurrier" predictions such as those of PIX can be a good choice in some applications, e.g., computing the soft fit between images and templates to perform (spatially informed) image retrieval. We also observe that models with 1H embeddings tend to perform better, yet differences are generally only significant against RND.We consider the evaluation sets from Sect. 4.2 and the fol- lowing variations of PIX and REG models (Sect. 3.2). The subindex EMB denotes a model that employs GloVe embed- dings and RND a model with embeddings randomly drawn from a dimension-wise normal distribution of mean (µ) and standard deviation (σ) equal to those of the GloVe embed- dings, preserving the original dimensionality (d=300). A third type employs one-hot vectors (1H). We additionally Table 2 shows that all models perform well on generalized triplets (top left), remarkably closely to their performance without imposing generalization conditions (right). Again, 1H performs slightly better, yet only significantly better than RND (p &lt; 0.005). Notably, the good performance of RND on generalized triplets evidences that the model does not rely on external knowledge (word embeddings) to predict un- seen combinations. This ability of generalizing from frequent combinations (S, R, O) to rare/unseen ones is especially valuable given the sparsity of implicit combinations and the impossibility of learning all of them from data.Contrarily, larger performance differences are observed with generalized words (Tab. 2, bottom left) where, as ex- pected, EMB outperforms RND and 1H embeddings by a  margin thanks to the transference of knowledge from word embeddings combined with the acquired spatial knowledge.To ensure that model predictions are meaningful and inter- pretable, we further validate the quantitative results above with a qualitative evaluation. Notice that all plots in Fig. 3 are generalized (either unseen words or triplets). Both, PIX and REG are able to infer the size and location of the Object notably well in unseen triplets (Fig. 3, bottom), regardless of the embedding type (EMB or RND). However, in unseen words (Fig. 3, top), the models that leverage word embed- dings (EMB) tend to perform better, aligning with the quanti- tative results above. Remarkably, both PIX EMB and REG EMB output very accurate predictions in generalized words (top), e.g., predicting correctly the size (and location) of an "ele- phant" relative to a "kid" even though the model has never seen an "elephant" before. Noticeably, the models learn to compose the triplets, distinguishing, for instance, between "carrying a surfboard" and "riding a surfboard" or between "playing frisbee" and "holding a frisbee", etc. The mapping of language to a 2D visualization provides another interesting property. Traditional language processing systems translate spatial information to qualitative symbolic representations that capture spatial knowledge with a limited symbolic vocabulary and that are used in qualitative spatial reasoning (Cohn and Renz 2008). Research shows that trans- lation of language to qualitative spatial symbolic representa- tions is difficult ( Kordjamshidi and Moens 2015), obtaining rather low F1 measures on recognition performance, even if the language utterance is accompanied by visual data (Kordjamshidi et al. 2017). Here, we have shown that we can translate language utterances into visualizations in a quantita- tive 2D space, complementing thus existing symbolic models.weights, we learn a REG 9 model without hidden layers, result- ing in only an embedding layer followed by a linear output layerˆylayerˆ layerˆy = W out u + b out , where u := [w S , w R , w O , S c , S b ]. By using one-hot encodings w S , w R , w O , the concatenation layer u becomes of size |V S | + |V R | + |V O | + 2 + 2. E.g., if "wearing" has one-hot index j in the Relationships' vocabu- lary (V R ), its index in the concatenation layer is |V S | + j. The product W out u is a 4-dimensional vector, where its i-th com- ponent is the product of the i-th row of W out with the vector u. Thus, the component |V S |+j of the i-th row of W out gives us the influence of the j-th relationship (i.e., "wearing") on the i-th dimension of the outputˆyoutputˆ outputˆy = [  Table 3: Words with the ten largest (top) and smallest (bot- tom) weights in absolute value for the Object's y-coordinate ( O c y ), in implicit and explicit language (learned in Raw data). Table 3 shows the weights influencing the y-coordinate O c y . We notice that objects such as "kite" or "headband" which tend to be above the Subject have a large negative weight, while objects that tend to be below, e.g., "sandals" or "hoof", have a large positive weight, i.e., a large positive influence on the Object's y-coordinate. While implicit relations such as "kicking" or "riding" are strong predictors of the Object's We study how the weights of the model provide insight into the spatial properties of words. To obtain more interpretable
