Natural language processing (NLP) has recently ex- perienced a neural network "tsunami" (Manning, 2016). A key advantage of these neural architec- tures is that they employ discriminatively-trained distributed representations, which can capture the meaning of linguistic phenomena ranging from in- dividual words (Turian et al., 2010) to longer-range linguistic contexts at the sentence level (Socher et al., 2013) and beyond ( Le and Mikolov, 2014). Be- cause they are discriminatively trained, these meth- ods can learn representations that yield very accurate predictive models (e.g., ).However, in comparison with the probabilistic graphical models that were previously the dominant machine learning approach for NLP, neural archi- tectures lack flexibility. By treating linguistic an- notations as random variables, probabilistic graphi- cal models can marginalize over annotations that are unavailable at test or training time, elegantly model- ing multiple linguistic phenomena in a joint frame- work ( Finkel et al., 2006). But because these graph- ical models represent uncertainty for every element in the model, adding too many layers of latent vari- ables makes them difficult to train.In this paper, we present a hybrid architecture that combines a recurrent neural network language model with a latent variable model over shallow discourse structure. In this way, the model learns a discriminatively-trained distributed representation of the local contextual features that drive word choice at the intra-sentence level, using techniques that are now state-of-the-art in language model- ing ( Mikolov et al., 2010). However, the model treats shallow discourse structure -specifically, the relationships between pairs of adjacent sentences - as a latent variable. As a result, the model can act as both a discourse relation classifier and a language model. Specifically:• If trained to maximize the conditional like- lihood of the discourse relations, it outper- forms state-of-the-art methods for both im- plicit discourse relation classification in the Penn Discourse Treebank (  and dialog act classification in Switch- board (Kalchbrenner and Blunsom, 2013). The model learns from both the discourse annota- tions as well as the language modeling objec- tive, unlike previous recursive neural architec- tures that learn only from annotated discourse relations ( .Let us denote token n in a sentence t by y t,n ∈ {1 . . . V }, and write y t = {y t,n } n∈{1...Nt} to indicate the sequence of words in sentence t. In an RNN language model, the proba- bility of the sentence is decomposed as,• If the model is trained to maximize the joint likelihood of the discourse relations and the text, it is possible to marginalize over discourse relations at test time, outperforming language models that do not account for discourse struc- ture.n In contrast to recent work on continuous latent variables in recurrent neural networks (Chung et al., 2015), which require complex variational autoen- coders to represent uncertainty over the latent vari- ables, our model is simple to implement and train, requiring only minimal modifications to existing re- current neural network architectures that are imple- mented in commonly-used toolkits such as Theano, Torch, and CNN.We focus on a class of shallow discourse rela- tions, which hold between pairs of adjacent sen- tences (or utterances). These relations describe how the adjacent sentences are related: for example, they may be in CONTRAST, or the latter sentence may of- fer an answer to a question posed by the previous sentence. Shallow relations do not capture the full range of discourse phenomena (Webber et al., 2012), but they account for two well-known problems: im- plicit discourse relation classification in the Penn Discourse Treebank, which was the 2015 CoNLL shared task ( ; and dialog act clas- sification, which characterizes the structure of in- terpersonal communication in the Switchboard cor- pus ( Stolcke et al., 2000), and is a key component of contemporary dialog systems (Williams and Young, 2007). Our model outperforms state-of-the-art alter- natives for implicit discourse relation classification in the Penn Discourse Treebank, and for dialog act classification in the Switchboard corpus.where the probability of each word y t,n is condi- tioned on the entire preceding sequence of words y t,&lt;n through the summary vector h t,n−1 . This vec- tor is computed recurrently from h t,n−2 and from the embedding of the current word, X y t,n−1 , where X ∈ R K×V and K is the dimensionality of the word embeddings. The language model can then be sum- marized as,where the matrix W o ∈ R V ×K defines the output embeddings, and b o ∈ R V is an offset. The function f(·) is a deterministic non-linear transition function. It typically takes an element-wise non-linear trans- formation (e.g., tanh) of a vector resulting from the sum of the word embedding and a linear transforma- tion of the previous hidden state. The model as described thus far is identical to the recurrent neural network language model (RNNLM) of Mikolov et al. (2010). In this paper, we replace the above simple hidden state units with the more complex Long Short-Term Memory units (Hochreiter and Schmidhuber, 1997), which have consis- tently been shown to yield much stronger perfor- mance in language modeling ( Pham et al., 2014). For simplicity, we still use the term RNNLM in re- ferring to this model.Our model scaffolds on recurrent neural network (RNN) language models ( Mikolov et al., 2010), and recent variants that exploit multiple levels of linguis- tic detail ( Lin et al., 2015).One draw- back of the RNNLM is that it cannot propagate long- range information between the sentences. Even if we remove sentence boundaries, long-range infor- mation will be attenuated by repeated application of the non-linear transition function.  propose the Document Context Language Model (DCLM) to address this issue. The core idea is to represent context with two vectors: h t,n , represent- ing intra-sentence word-level context, and c t , rep- resenting inter-sentence context. These two vectors z t y t −1, N t−1 −2 y t −1, N t−1 −1 y t −1, N t−1 y t ,1 y t ,2 y t ,3Figure 1: A fragment of our model with latent variable zt, which only illustrates discourse information flow from sentence (t − 1)to t. The information from sentence (t − 1) affects the distribution of zt and then the words prediction within sentence t. In the second step, the sentence y t is generated, conditioning on the preceding sentence y t−1 and the discourse relation z t :where c t−1 is set to the last hidden state of the pre- vious sentence.  show that this model can improve language model perplexity.  and W c ; depending on the discourse relation that holds be- tween (t − 1) and t, these matrices will favor dif- ferent parts of the embedding space. The bias term b (zt) ois also parametrized by the discourse relation, so that each relation can favor specific words.Overall, the joint probability of the text and dis- course relations is, Our model (see Figure 1) is formulated as a two-step generative story. In the first step, context informa- tion from the sentence (t − 1) is used to generate the discourse relation between sentences (t − 1) and t,where z t is a random variable capturing the dis- course relation between the two sentences, and c t−1 is a vector summary of the contextual information from sentence (t − 1), just as in the DCLM (Equa- tion 5). The model maintains a default context vec- tor c 0 for the first sentences of documents, and treats it as a parameter learned with other model parame- ters during training.If the discourse relations z t are not observed, then our model is a form of latent variable recurrent neu- ral network (LVRNN). Connections to recent work on LVRNNs are discussed in § 6; the key difference is that the latent variables here correspond to linguis- tically meaningful elements, which we may wish to predict or marginalize, depending on the situation.Parameter Tying As proposed, the Discourse Re- lation Language Model has a large number of pa- rameters. Let K, H and V be the input dimension, hidden dimension and the size of vocabulary in lan- guage modeling. The size of each prediction matrix W overall marginal likelihood as a product over local marginals.o and W c is V × H; there are two such matri- ces for each possible discourse relation. We reduce the number of parameters by factoring each of these matrices into two components:where V (z) and M (z) are relation-specific compo- nents for intra-sentential and inter-sentential con- texts; the size of these matrices is H × H, with H V . The larger V × H matrices W o and W c are shared across all relations.The model can be trained in two ways: to maximize the joint probability p(y 1:T , z 1:T ), or to maximize the conditional probability p(z 1:T | y 1:T ). The joint training objective is more suitable for language mod- eling scenarios, and the conditional objective is bet- ter for discourse relation prediction. We now de- scribe each objective in detail.There are two possible inference scenarios: in- ference over discourse relations, conditioning on words; and inference over words, marginalizing over discourse relations.Joint likelihood objective The joint likelihood objective function is directly adopted from the joint probability defined in Equation 8. The objective function for a single document with T sentences or utterances is,Inference over Discourse Relations The prob- ability of discourse relations given the sentences p(z 1:T | y 1:T ) is decomposed into the product of probabilities of individual discourse relations condi- tioned on the adjacent sentences t p(z t | y t , y t−1 ). These probabilities are computed by Bayes' rule:The terms in each product are given in Equations 6 and 7. Normalizing involves only a sum over a small finite number of discourse relations. Note that infer- ence is easy in our case because all words are ob- served and there is no probabilistic coupling of the discourse relations.where θ represents the collection of all model pa- rameters, including the parameters in the LSTM units and the word embeddings. Maximizing the objective function will jointly optimize the model on both language lan- guage and discourse relation prediction. As such, it can be viewed as a form of multi-task learn- ing (Caruana, 1997), where we learn a shared rep- resentation that works well for discourse relation prediction and for language modeling. However, in practice, the large vocabulary size and number of to- kens means that the language modeling part of the objective function tends to dominate.Inference over Words In discourse-informed lan- guage modeling, we marginalize over discourse re- lations to compute the probability of a sequence of sentence y 1:T , which can be written as,Conditional objective This training objective is specific to the discourse relation prediction task, and based on Equation 10 can be written as:because the word sequences are observed, decou- pling each z t from its neighbors z t+1 and z t−1 . This decoupling ensures that we can compute theThe first line in Equation 13 is the same as but the second line reflects the normalization over all possible values of z t . This forces the objective func- tion to attend specifically to the problem of maxi- mizing the conditional likelihood of the discourse relations and treat language modeling as an auxil- iary task (Collobert et al., 2011). alogue act corpus ( Stolcke et al., 2000, SWDA), which is annotated on a collections of phone con- versations. Both corpora contain annotations of dis- course relations and dialogue relations that hold be- tween adjacent spans of text.The discourse relation language model is carefully designed to decouple the discourse relations from each other, after conditioning on the words. It is clear that text documents and spoken dialogues have sequential discourse structures, and it seems likely that modeling this structure could improve performance. In a traditional hidden Markov model (HMM) generative approach ( Stolcke et al., 2000), modeling sequential dependencies is not difficult, because training reduces to relative frequency es- timation. However, in the hybrid probabilistic- neural architecture proposed here, training is al- ready expensive, due to the large number of param- eters that must be estimated. Adding probabilis- tic couplings between adjacent discourse relations t−1 , z t would require the use of dynamic pro- gramming for both training and inference, increas- ing time complexity by a factor that is quadratic in the number of discourse relations. We did not at- tempt this in this paper; we do compare against a conventional HMM on the dialogue act prediction task in § 5.  propose an alternative form of the document context language model, in which the contextual information c t impacts the hidden state h t+1 , rather than going directly to the outputs y t+1 . They obtain slightly better perplexity with this ap- proach, which has fewer trainable parameters. How- ever, this model would couple z t with all subsequent sentences y &gt;t , making prediction and marginaliza- tion of discourse relations considerably more chal- lenging. Sequential Monte Carlo algorithms offer a possible solution (de Freitas et al., ; Gu et al., 2015), which may be considered in future work.We evaluate our model on two benchmark datasets: (1) the Penn Discourse Treebank ( Prasad et al., 2008, PDTB), which is annotated on a corpus of Wall Street Journal acticles; (2) the Switchboard di- The Penn Discourse Treebank (PDTB) provides a low-level discourse annotation on written texts. In the PDTB, each discourse relation is annotated be- tween two argument spans, Arg1 and Arg2. There are two types of relations: explicit and implicit. Explicit relations are signalled by discourse mark- ers (e.g., "however", "moreover"), and the span of Arg1 is almost totally unconstrained: it can range from a single clause to an entire paragraph, and need not be adjacent to either Arg2 nor the dis- course marker. However, automatically classifying these relations is considered to be relatively easy, due to the constraints from the discourse marker it- self ( ). In addition, explicit rela- tions are difficult to incorporate into language mod- els which must generate each word exactly once. On the contrary, implicit discourse relations are anno- tated only between adjacent sentences, based on a semantic understanding of the discourse arguments. Automatically classifying these discourse relations is a challenging task ( Lin et al., 2009;Pitler et al., 2009;. We therefore focus on implicit discourse re- lations, leaving to the future work the question of how to apply our modeling framework to explicit discourse relations. During training, we collapse all relation types other than implicit (explicit, ENTREL, and NOREL) into a single dummy relation type, which holds between all adjacent sentence pairs that do not share an implicit relation.As in the prior work on first-level discourse re- lation identification (e.g., Park and Cardie, 2012), we use sections 2-20 of the PDTB as the training set, sections 0-1 as the development set for param- eter tuning, and sections 21-22 for testing. For pre- processing, we lower-cased all tokens, and substi- tuted all numbers with a special token "NUM". To build the vocabulary, we kept the 10,000 most fre- quent words from the training set, and replaced low- frequency words with a special token "UNK". In prior work that focuses on detecting individual rela- tions, balanced training sets are constructed so that there are an equal number of instances with and without each relation type (Park and Cardie, ;Biran and McKeown, 2013;Rutherford and Xue, 2014). In this paper, we target the more challenging multi- way classification problem, so this strategy is not ap- plicable; in any case, since our method deals with entire documents, it is not possible to balance the training set in this way.The Switchboard Dialog Act Corpus (SWDA) is annotated on the Switchboard Corpus of human- human conversational telephone speech (Godfrey et al., 1992). The annotations label each utterance with one of 42 possible speech acts, such as AGREE, HEDGE, and WH-QUESTION. Because these speech acts form the structure of the dialogue, most of them pertain to both the preceding and succeeding utter- ances (e.g., AGREE). The SWDA corpus includes 1155 five-minute conversations. We adopted the standard split from Stolcke et al. (2000), using 1,115 conversations for training and nineteen conversa- tions for test. For parameter tuning, we randomly select nineteen conversations from the training set as the development set. After parameter tuning, we train the model on the full training set with the se- lected configuration. We use the same preprocessing techniques here as in the PDTB. rate λ = 0.1. To avoid the exploding gradient prob- lem, we used norm clipping trick with a threshold of τ = 5.0 ( Pascanu et al., 2012). In addition, we used value dropout ( Srivastava et al., 2014) with rate 0.5, on the input X, context vector c and hidden state h, similar to the architecture proposed by Pham et al. (2014). The training procedure is monitored by the performance on the development set. In our experi- ments, 4 to 5 epochs were enough.Hyper-parameters Our model includes two tun- able hyper-parameters: the dimension of word rep- resentation K, the hidden dimension of LSTM unit H. We consider the values {32, 48, 64, 96, 128} for both K and H. For each corpus in experiments, the best combination of K and H is selected via grid search on the development set.Our main evaluation is discourse relation prediction, using the PDTB and SWDA corpora. We also eval- uate on language modeling, to determine whether incorporating discourse annotations at training time and then marginalizing them at test time can im- prove performance.We use a single-layer LSTM to build the recur- rent architecture of our models, which we im- plement in the CNN package. 1 Our implemen- tation is available on https://github.com/ jiyfeng/drlm. Some additional details follow.Initialization We first evaluate our model with implicit discourse relation prediction on the PDTB dataset. Most of the prior work on first-level discourse relation predic- tion focuses on the "one-versus-all" binary classifi- cation setting, but we attack the more general four- way classification problem, as performed by Ruther- ford and Xue (2015). We compare against the fol- lowing methods:Rutherford and Xue (2015) build a set of feature- rich classifiers on the PDTB, and then augment these classifiers with additional automatically- labeled training instances. We compare against their published results, which are state-of-the-art.Learning Online learning was performed using AdaGrad ( Duchi et al., 2011) with initial learningJi and Eisenstein (2015) employ a recursive neural network architecture. Their experimental setting is different, so we re-run their system using the same setting as described in § 4. Our work -DRLM 5. Joint training 74.0 6. Conditional training 77.0 * * significantly better than lines 2 and 4 with p &lt; 0.05 * significantly better than line 4 with p &lt; 0.01 Table 1: Multiclass relation identification on the first-level Results As shown in Table 1, the conditionally- trained discourse relation language models (DRLM) outperforms all alternatives, on both metrics. While the jointly-trained DRLM is at the same level as the previous state-of-the-art, conditional training on the same model provides a significant additional advan- tage, indicated by a binomial test.is more reliable on this evaluation, since no single class dominates, unlike the PDTB task.Dialogue act tagging has been widely studied in both NLP and speech communities. We follow the setup used by Stolcke et al. (2000) to conduct experiments, and adopt the following systems for comparison:As a joint model for discourse and language model- ing, DRLM can also function as a language model, assigning probabilities to sequences of words while marginalizing over discourse relations. To deter- mine whether discourse-aware language modeling can improve performance, we compare against the following systems: RNNLM+LSTM This is the same basic architec- ture as the RNNLM proposed by (Mikolov et al., 2010), which was shown to outperform a Kneser- Ney smoothed 5-gram model on modeling Wall Street Journal text. Following Pham et al. (2014), we replace the Sigmoid nonlinearity with a long short-term memory (LSTM).Kalchbrenner and Blunsom (2013) employ a complex neural architecture, with a convolutional network at each utterance and a recurrent net- work over the length of the dialog. To our knowl- edge, this model attains state-of-the-art accuracy on this task, outperforming other prior work such as ( Webb et al., 2005;Milajevs and Purver, 2014).Results As shown in Table 2, the conditionally- trained discourse relation language model (DRLM) outperforms all competitive systems on this task. A binomial test shows the result in line 6 is signifi- cantly better than the previous state-of-the-art (line 4  log act tagging, where hidden Markov models have been a dominant approach ( Stolcke et al., 2000). In this work, the emission distribution is an n-gram language model for each dialogue act; we use a conditionally-trained recurrent neural network lan- guage model. An alternative neural approach for di- alogue act tagging is the combined convolutional- recurrent architecture of Kalchbrenner and Blunsom (2013). Our modeling framework is simpler, rely- ing on a latent variable parametrization of a purely recurrent architecture.yields further improvements for both datasets. We emphasize that discourse relations in the test doc- uments are marginalized out, so no annotations are required for the test set; the improvements are due to the disambiguating power of discourse relations in the training set. Because our training procedure requires discourse annotations, this approach does not scale to the large datasets typically used in language modeling. As a consequence, the results obtained here are somewhat academic, from the perspective of practical language modeling. Nonetheless, the positive results here mo- tivate the investigation of training procedures that are also capable of marginalizing over discourse re- lations at training time.This paper draws on previous work in both discourse modeling and language modeling.Language modeling There are an increasing number of attempts to incorporate document-level context information into language modeling. For ex- ample, Mikolov and Zweig (2012) introduce LDA- style topics into RNN based language modeling. Sordoni et al. (2015) use a convolutional structure to summarize the context from previous two utter- ances as context vector for RNN based language modeling. Our models in this paper provide a uni- fied framework to model the context and current sen- tence. Wang and Cho (2015) and Lin et al. (2015) construct bag-of-words representations of previous sentences, which are then used to inform the RNN language model that generates the current sentence. The most relevant work is the Document Context Language Model ( Ji et al., 2015, DCLM); we de- scribe the connection to this model in § 2. By adding discourse information as a latent variable, we attain better perplexity on held-out data.Discourse and dialog modeling Early work on discourse relation classification utilizes rich, hand- crafted feature sets ( Joty et al., 2012;Lin et al., 2009;Sagae, 2009). Recent representation learn- ing approaches attempt to learn good representations jointly with discourse relation classifiers and dis- course parsers (Ji and Eisenstein, 2014;Li et al., 2014). Of particular relevance are applications of neural architectures to PDTB implicit discourse re- lation classification Zhang et al., 2015;Braud and Denis, 2015). All of these approaches are essentially classifiers, and take su- pervision only from the 16,000 annotated discourse relations in the PDTB training set. In contrast, our approach is a probabilistic model over the entire text.Probabilistic models are frequently used in dia- Latent variable neural networks Introducing la- tent variables to a neural network model increases its representational capacity, which is the main goal of prior efforts in this space ( Kingma and Welling, 2014;Chung et al., 2015). From this perspective, our model with discourse relations as latent vari- ables shares the same merit. Unlike this prior work, in our approach, the latent variables carry a lin- guistic interpretation, and are at least partially ob- served. Also, these prior models employ continuous latent variables, requiring complex inference tech- niques such as variational autoencoders (Kingma and Welling, 2014;Burda et al., 2016;Chung et al., 2015). In contrast, the discrete latent variables in our model are easy to sum and maximize over.We have presented a probabilistic neural model over sequences of words and shallow discourse re- lations between adjacent sequences. This model combines positive aspects of neural network ar- chitectures with probabilistic graphical models: it can learn discriminatively-trained vector representa- tions, while maintaining a probabilistic representa- tion of the targeted linguistic element: in this case, shallow discourse relations. This method outper- forms state-of-the-art systems in two discourse rela- tion detection tasks, and can also be applied as a lan- guage model, marginalizing over discourse relations on the test data. Future work will investigate the possibility of learning from partially-labeled train- ing data, which would have at least two potential ad- vantages. First, it would enable the model to scale up to the large datasets needed for competitive language modeling. Second, by training on more data, the resulting vector representations might support even more accurate discourse relation prediction.
