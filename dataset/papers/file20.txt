Deep convolutional networks (convnets) have become a staple of the modern computer vision pipeline. After training these models on a massive database of image-label pairs like ImageNet ( Russakovsky et al., 2015), the network easily adapts to a variety of similar visual tasks, achieving impressive results on image classification ( Zeiler &amp; Fergus, 2014;Razavian et al., 2014) or localization ( Long et al., 2015) tasks. In other perceptual domains such as natural language processing or speech recognition, deep networks have proven highly effective as well ( Bahdanau et al., 2015;Sutskever et al., 2014;Vinyals et al., 2015;Graves et al., 2013). However, all of these recent results rely on a supervisory signal from large-scale databases of hand-labeled data, ignoring much of the useful information present in the structure of the data itself.Meanwhile, Generative Adversarial Networks (GANs) ( Goodfellow et al., 2014) have emerged as a powerful framework for learning generative models of arbitrarily complex data distributions. The GAN framework learns a generator mapping samples from an arbitrary latent distribution to data, as well as an adversarial discriminator which tries to distinguish between real and generated samples as accurately as possible. The generator's goal is to "fool" the discriminator by producing samples which are as close to real data as possible. When trained on databases of natural images, GANs produce impressive results ( Radford et al., 2016;Denton et al., 2015).Interpolations in the latent space of the generator produce smooth and plausible semantic variations, and certain directions in this space correspond to particular semantic attributes along which the data distribution varies. For example, Radford et al. (2016) showed that a GAN trained on a database of human faces learns to associate particular latent directions with gender and the presence of eyeglasses.A natural question arises from this ostensible "semantic juice" flowing through the weights of generators learned using the GAN framework: can GANs be used for unsupervised learning of rich feature representations for arbitrary data distributions? An obvious issue with doing so is that the features datax, E(x)x E E(x) generator maps latent samples to generated data, but the framework does not include an inverse mapping from data to latent representation.Hence, we propose a novel unsupervised feature learning framework, Bidirectional Generative Adversarial Networks (BiGAN). The overall model is depicted in Figure 1. In short, in addition to the generator G from the standard GAN framework ( Goodfellow et al., 2014), BiGAN includes an encoder E which maps data x to latent representations z. The BiGAN discriminator D discriminates not only in data space (x versus G(z)), but jointly in data and latent space (tuples (x, E(x)) versus (G(z), z)), where the latent component is either an encoder output E(x) or a generator input z.It may not be obvious from this description that the BiGAN encoder E should learn to invert the generator G. The two modules cannot directly "communicate" with one another: the encoder never "sees" generator outputs (E(G(z)) is not computed), and vice versa. Yet, in Section 3, we will both argue intuitively and formally prove that the encoder and generator must learn to invert one another in order to fool the BiGAN discriminator.Because the BiGAN encoder learns to predict features z given data x, and prior work on GANs has demonstrated that these features capture semantic attributes of the data, we hypothesize that a trained BiGAN encoder may serve as a useful feature representation for related semantic tasks, in the same way that fully supervised visual models trained to predict semantic "labels" given images serve as powerful feature representations for related visual tasks. In this context, a latent representation z may be thought of as a "label" for x, but one which came for "free," without the need for supervision.An alternative approach to learning the inverse mapping from data to latent representation is to directly model p(z|G(z)), predicting generator input z given generated data G(z). We'll refer to this alternative as a latent regressor, later arguing (Section 4.1) that the BiGAN encoder may be preferable in a feature learning context, as well as comparing the approaches empirically.BiGANs are a robust and highly generic approach to unsupervised feature learning, making no assumptions about the structure or type of data to which they are applied, as our theoretical results will demonstrate. Our empirical studies will show that despite their generality, BiGANs are competitive with contemporary approaches to self-supervised and weakly supervised feature learning designed specifically for a notoriously complex data distribution -natural images. Dumoulin et al. (2016) independently proposed an identical model in their concurrent work, exploring the case of a stochastic encoder E and the ability of such models to learn in a semi-supervised setting.Let p X (x) be the distribution of our data for x ∈ Ω X (e.g. natural images). The goal of generative modeling is capture this data distribution using a probabilistic model. Unfortunately, exact modeling of this probability density function is computationally intractable ( Salakhutdinov &amp; Hinton, 2009) for all but the most trivial models. Generative Adversarial Networks (GANs) (Good-fellow et al., 2014) instead model the data distribution as a transformation of a fixed latent distribution p Z (z) for z ∈ Ω Z . This transformation, called a generator, is expressed as a deterministic feed forward network G :The GAN framework trains a generator, such that no discriminative model D : Ω X → [0,1] can distinguish samples of the data distribution from samples of the generative distribution. Both generator and discriminator are learned using the adversarial (minimax) objective min(1)Goodfellow et al. (2014) showed that for an ideal discriminator the objective C(G) := max D V (D, G) is equivalent to the Jensen-Shannon divergence between the two distributions p G and p X .The adversarial objective 1 does not directly lend itself to an efficient optimization, as each step in the generator G requires a full discriminator D to be learned. Furthermore, a perfect discriminator no longer provides any gradient information to the generator, as the gradient of any global or local maximum of V (D, G) is 0. To provide a strong gradient signal nonetheless, Goodfellow et al. (2014) slightly alter the objective between generator and discriminator updates, while keeping the same fixed point characteristics. They also propose to optimize (1) using an alternating optimization switching between updates to the generator and discriminator. While this optimization is not guaranteed to converge, empirically it works well if the discriminator and generator are well balanced.Despite the empirical strength of GANs as generative models of arbitrary data distributions, it is not clear how they can be applied as an unsupervised feature representation. One possibility for learning such representations is to learn an inverse mapping regressing from generated data G(z) back to the latent input z. However, unless the generator perfectly models the data distribution p X , a nearly impossible objective for a complex data distribution such as that of high-resolution natural images, this idea may prove insufficient.In Bidirectional Generative Adversarial Networks (BiGANs) we not only train a generator, but additionally train an encoder E : Ω X → Ω Z . The encoder induces a distribution p E (z|x) = δ(z − E(x)) mapping data points x into the latent feature space of the generative model. The discriminator is also modified to take input from the latent space, predicting P D (Y |x, z), where Y = 1 if x is real (sampled from the real data distribution p X ), andThe BiGAN training objective is defined as a minimax objectivewhereWe optimize this minimax objective using the same alternating gradient based optimization as Goodfellow et al. (2014). See Section 3.4 for details.BiGANs share many of the theoretical properties of GANs ( Goodfellow et al., 2014), while addition- ally guaranteeing that at the global optimum, G and E are each other's inverse. BiGANs are also closely related to autoencoders with an 0 loss function. In the following sections we highlight some of the appealing theoretical properties of BiGANs.be the joint distri- butions modeled by the generator and encoder respectively. Ω := Ω X × Ω Z is the joint latent and data space. For a region R ⊆ Ω,are probability measures over that region. We also defineas measures over regions R X ⊆ Ω X and R Z ⊆ Ω Z . We refer to the set of features and data samples in the support of P X and P Z asˆΩasˆ asˆΩ X := supp(P X ) andˆΩandˆ andˆΩ Z := supp(P Z ) respectively. D KL ( P || Q ) and D JS ( P || Q ) respectively denote the Kullback-Leibler (KL) and Jensen-Shannon divergences between probability measures P and Q. By definition,where f P Q := dP dQ is the Radon-Nikodym (RN) derivative of measure P with respect to measure Q, with the defining property that P (R) = R f P Q dQ. The RN derivative f P Q : Ω → R ≥0 is defined for any measures P and Q on space Ω such that P is absolutely continuous with respect to Q: i.e., for any R ⊆ Ω, P (R) &gt; 0 =⇒ Q(R) &gt; 0.We start by characterizing the optimal discriminator for any generator and encoder, following Goodfellow et al. (2014). This optimal discriminator then allows us to reformulate objective (3), and show that it reduces to the Jensen-Shannon divergence between the joint distributions P EX and P GZ .Proposition 1 For any E and G, the optimal discriminatorProof. Given in Appendix A.1.This optimal discriminator now allows us to characterize the optimal generator and encoder.The encoder and generator's objective for an optimal discriminator C(E, G) :EG , E, G) can be rewritten in terms of the Jensen-Shannon divergence between measures P EX and P GZ as C(E, G) = 2 D JS ( P EX || P GZ ) − log 4.Proof. Given in Appendix A.2.Theorem 1 The global minimum of C(E, G) is achieved if and only if P EX = P GZ . At that point, C(E, G) = − log 4 and D Proof. From Proposition 2, we have that C(E, G) = 2 D JS ( P EX || P GZ ) − log 4. The Jensen- Shannon divergence D JS ( P || Q ) ≥ 0 for any P and Q, and D JS ( P || Q ) = 0 if and only if P = Q. Therefore, the global minimum of C(E, G) occurs if and only if P EX = P GZ , and at this point the value is C(E, G) = − log 4. Finally, P EX = P GZ implies that the optimal discriminator is chance:The optimal discriminator, encoder, and generator of BiGAN are similar to the optimal discriminator and generator of the GAN framework ( Goodfellow et al., 2014). However, an important difference is that BiGAN optimizes a Jensen-Shannon divergence between a joint distribution over both data X and latent features Z. This joint divergence allows us to further characterize properties of G and E, as shown below.We first present an intuitive argument that, in order to "fool" a perfect discriminator, a deterministic BiGAN encoder and generator must invert each other. (Later we will formally state and prove this Published as a conference paper at ICLR 2017 property.) Consider a BiGAN discriminator input pair (x, z). Due to the sampling procedure, (x, z) must satisfy at least one of the following two properties:If only one of these properties is satisfied, a perfect discriminator can infer the source of (x, z) with certainty: if only (a) is satisfied, (x, z) must be an encoder pair (x, E(x)) and D * EG (x, z) = 1; if only (b) is satisfied, (x, z) must be a generator pair (G(z), z) and D * EG (x, z) = 0. Therefore, in order to fool a perfect discriminator at (x, z) (so that 0 &lt; D * EG (x, z) &lt; 1), E and G must satisfy both (a) and (b). In this case, we can substitute the equality E(x) = z required by (a) into the equality G(z) = x required by (b), and vice versa, giving the inversion propertiesFormally, we show in Theorem 2 that the optimal generator and encoder invert one another almost everywhere on the supportˆΩsupportˆ supportˆΩ X andˆΩandˆ andˆΩ Z of P X and P Z .Theorem 2 If E and G are an optimal encoder and generator, then E = G −1 almost everywhere; that is, G(E(x)) = x for P X -almost every x ∈ Ω X , and E(G(z)) = z for P Z -almost every z ∈ Ω Z .Proof. Given in Appendix A.4.While Theorem 2 characterizes the encoder and decoder at their optimum, due to the non-convex nature of the optimization, this optimum might never be reached. Experimentally, Section 4 shows that on standard datasets, the two are approximate inverses; however, they are rarely exact inverses. It is thus also interesting to show what objective BiGAN optimizes in terms of E and G. Next we show that BiGANs are closely related to autoencoders with an 0 loss function.As argued in Section 1, a model trained to predict features z given data x should learn useful semantic representations. Here we show that the BiGAN objective forces the encoder E to do exactly this: in order to fool the discriminator at a particular z, the encoder must invert the generator at that z, such that E(G(z)) = z.The encoder and generator objective given an optimal discriminator C(E, G) := max D V (D, E, G) can be rewritten as an 0 autoencoder loss functionwith log f EG ∈ (−∞, 0) and log (1 − f EG ) ∈ (−∞, 0) P EX -almost and P GZ -almost everywhere.Proof. Given in Appendix A.5.Here the indicator functionin the first term is equivalent to an autoencoder with 0 loss, while the indicator 1 [E(G(z))=z] in the second term shows that the BiGAN encoder must invert the generator, the desired property for feature learning. The objective further encourages the functions E(x) and G(z) to produce valid outputs in the support of P Z and P X respectively. Unlike regular autoencoders, the 0 loss function does not make any assumptions about the structure or distribution of the data itself; in fact, all the structural properties of BiGAN are learned as part of the discriminator.In practice, as in the GAN framework ( Goodfellow et al., 2014), each BiGAN module D, G, and E is a parametric function (with parameters θ D , θ G , and θ E , respectively). As a whole, BiGAN can be optimized using alternating stochastic gradient steps. In one iteration, the discriminator parameters θ D are updated by taking one or more steps in the positive gradient direction ∇ θ D V (D, E, G), then the encoder parameters θ E and generator parameters θ G are together updated by taking a step in the negative gradient direction −∇ θ E ,θ G V (D, E, G). In both cases, the expectation terms ofdrawn independently for each update step. Goodfellow et al. (2014) found that an objective in which the real and generated labels Y are swapped provides stronger gradient signal to G. We similarly observed in BiGAN training that an "inverse" objective provides stronger gradient signal to G and E. For efficiency, we also update all modules D, G, and E simultaneously at each iteration, rather than alternating between D updates and G, E updates. See Appendix B for details.It is often useful to parametrize the output of the generator G and encoder E in a different, usually smaller, space Ω X and Ω Z rather than the original Ω X and Ω Z . For example, for visual feature learning, the images input to the encoder should be of similar resolution to images used in the evaluation. On the other hand, generating high resolution images remains difficult for current generative models. In this situation, the encoder may take higher resolution input while the generator output and discriminator input remain low resolution.We generalize the BiGAN objective V (D, G, E) (3) with functions g X : Ω X → Ω X and g Z : Ω Z → Ω Z , and encoder E :An identity g X (x) = x and g Z (z) = z (and Ω X = Ω X , Ω Z = Ω Z ) yields the original objective. For visual feature learning with higher resolution encoder inputs, g X is an image resizing function that downsamples a high resolution image x ∈ Ω X to a lower resolution image x ∈ Ω X , as output by the generator. (g Z is identity.)In this case, the encoder and generator respectively induce probability measures P EX and P GZ over regions R ⊆ Ω of the joint space)∈R] dx, and P GZ defined analogously. For optimal E and G, we can show P EX = P GZ : a generalization of Theorem 1. When E and G are deterministic and optimal, Theorem 2 -that E and G invert one another -can also be generalized:We evaluate the feature learning capabilities of BiGANs by first training them unsupervised as described in Section 3.4, then transferring the encoder's learned feature representations for use in auxiliary supervised learning tasks. To demonstrate that BiGANs are able to learn meaningful feature representations both on arbitrary data vectors, where the model is agnostic to any underlying structure, as well as very high-dimensional and complex distributions, we evaluate on both permutation-invariant MNIST ( LeCun et al., 1998) and on the high-resolution natural images of ImageNet ( Russakovsky et al., 2015).In all experiments, each module D, G, and E is a parametric deep (multi-layer) network. The BiGAN discriminator D(x, z) takes data x as its initial input, and at each linear layer thereafter, the latent representation z is transformed using a learned linear transformation to the hidden layer dimension and added to the non-linearity input.  unconditionally, not learning any meaningful intermediate representations.Latent regressor We consider an alternative encoder training by minimizing a reconstruction loss L(z, E(G(z))), after or jointly during a regular GAN training, called latent regressor or joint latent regressor respectively. We use a sigmoid cross entropy loss L as it naturally maps to a uniformly distributed output space. Intuitively, a drawback of this approach is that, unlike the encoder in a BiGAN, the latent regressor encoder E is trained only on generated samples G(z), and never "sees" real data x ∼ p X . While this may not be an issue in the theoretical optimum where p G (x) = p X (x) exactly -i.e., G perfectly generates the data distribution p X -in practice, for highly complex data distributions p X , such as the distribution of natural images, the generator will almost never achieve this perfect result. The fact that the real data x are never input to this type of encoder limits its utility as a feature representation for related tasks, as shown later in this section.We first present results on permutation-invariant MNIST ( LeCun et al., 1998). In the permutation- invariant setting, each 28×28 digit image must be treated as an unstructured 784D vector ( Goodfellow et al., 2013). In our case, this condition is met by designing each module as a multi-layer perceptron (MLP), agnostic to the underlying spatial structure in the data (as opposed to a convnet, for example). See Appendix C.1 for more architectural and training details. We set the latent distribution p Z = [U(−1, 1)] 50 -a 50D continuous uniform distribution.   the data, but often capture some interesting aspects. Here, each of D, G, and E is a convnet. In all experiments, the encoder E architecture follows AlexNet ( Krizhevsky et al., 2012) through the fifth and last convolution layer (conv5). We also experiment with an AlexNet-based discriminator D as a baseline feature learning approach. We set the latent distribution p Z = [U(−1, 1)] 200 -a 200D continuous uniform distribution. Additionally, we experiment with higher resolution encoder input images -112 × 112 rather than the 64 × 64 used elsewhere -using the generalization described in Section 3.5. See Appendix C.2 for more architectural and training details.Qualitative results The convolutional filters learned by each of the three modules are shown in Figure 3. We see that the filters learned by the encoder E have clear Gabor-like structure, similar to those originally reported for the fully supervised AlexNet model ( Krizhevsky et al., 2012). The filters also have similar "grouping" structure where one half (the bottom half, in this case) is more color sensitive, and the other half is more edge sensitive. (This separation of the filters occurs due to the AlexNet architecture maintaining two separate filter paths for computational efficiency.)In Figure 4 we present sample generations G(z), as well as real data samples x and their BiGAN re- constructions G (E(x)). The reconstructions, while certainly imperfect, demonstrate empirically that Published as a conference paper at ICLR 2017 conv1 conv2 conv3 conv4 conv5Random (Noroozi &amp; Favaro, 2016) 48   Table 2.VOC classification, detection, and segmentation We evaluate the transferability of BiGAN rep- resentations to the PASCAL VOC ( Everingham et al., 2014) computer vision benchmark tasks, including classification, object detection, and semantic segmentation. The classification task involves simple binary prediction of presence or absence in a given image for each of 20 object categories. The object detection and semantic segmentation tasks go a step further by requiring the objects to be localized, with semantic segmentation requiring this at the finest scale: pixelwise prediction of object identity. For detection, the pretrained model is used as the initialization for Fast R-CNN (Gir- shick, 2015) (FRCN) training; and for semantic segmentation, the model is used as the initialization for Fully Convolutional Network ( Long et al., 2015) (FCN) training, in each case replacing the AlexNet ( Krizhevsky et al., 2012) model trained fully supervised for ImageNet classification. We report results on each of these tasks in Table 3, comparing BiGANs with contemporary approaches to unsupervised (  and self-supervised ( Doersch et al., 2015;Agrawal et al., 2015;Wang &amp; Gupta, 2015;Pathak et al., 2016) feature learning in the visual domain, as well as the baselines discussed in Section 4.1.Despite making no assumptions about the underlying structure of the data, the BiGAN unsupervised feature learning framework offers a representation competitive with existing self-supervised and even weakly supervised feature learning approaches for visual feature learning, while still being a purely generative model with the ability to sample data x and predict latent representation z. Furthermore, BiGANs outperform the discriminator (D) and latent regressor (LR) baselines discussed in Section 4.1, confirming our intuition that these approaches may not perform well in the regime of highly complex data distributions such as that of natural images. The version in which the encoder takes a higher resolution image than output by the generator (BiGAN 112 × 112 E) performs better still, and this strategy is not possible under the LR and D baselines as each of those modules take generator outputs as their input.Although existing self-supervised approaches have shown impressive performance and thus far tended to outshine purely unsupervised approaches in the complex domain of high-resolution images, purely unsupervised approaches to feature learning or pre-training have several potential benefits.   Furthermore, BiGAN and other unsupervised approaches needn't suffer from domain shift between the pre-training task and the transfer task, unlike self-supervised methods in which some aspect of the data is normally removed or corrupted in order to create a non-trivial prediction task. In the context prediction task ( Doersch et al., 2015), the network sees only small image patches -the global image structure is unobserved. In the context encoder or inpainting task (Pathak et al., 2016), each image is corrupted by removing large areas to be filled in by the prediction network, creating inputs with dramatically different appearance from the uncorrupted natural images seen in the transfer tasks.Other approaches ( Agrawal et al., 2015;Wang &amp; Gupta, 2015) rely on auxiliary information un- available in the static image domain, such as video, egomotion, or tracking. Unlike BiGAN, such approaches cannot learn feature representations from unlabeled static images.We finally note that the results presented here constitute only a preliminary exploration of the space of model architectures possible under the BiGAN framework, and we expect results to improve sig- nificantly with advancements in generative image models and discriminative convolutional networks alike.Proposition 1 For any E and G, the optimal discriminatorof measure P EX with respect to measure P EX + P GZ .Proof. For measures P and Q on space Ω, with P absolutely continuous with respect to Q, the RN derivative f P Q := dP dQ exists, and we haveLet the probability measure P EG :=denote the average of measures P EX and P GZ . Both P EX and P GZ are each absolutely continuous with respect to P EG . Hence the RN derivativesexist and sum to 1:We use (4) and (5) to rewrite the objective V (3) as a single expectation under measure P EG :Note that arg max y {a log y + (1 − a) log(1 − y)} = a for any aProposition 2 The encoder and generator's objective for an optimal discriminator C(E, G) :EG , E, G) can be rewritten in terms of the Jensen-Shannon divergence between measures P EX and P GZ as C(E, G) = 2 D JS ( P EX || P GZ ) − log 4.Proof. Using Proposition 1 along with (5) = 2 D JS ( P EX || P GZ ) − log 4.While Theorem 1 and Propositions 1 and 2 hold for any encoder p E (z|x) and generator p G (x|z), stochastic or deterministic, Theorems 2 and 3 assume the encoder E and generator G are deterministic functions; i.e., with conditionals p E (z|x) = δ(z − E(x)) and p G (x|z) = δ(x − G(z)) defined as δ functions.For use in the proofs of those theorems, we simplify the definitions of measures P EX and P GZ given in Section 3 for the case of deterministic functions E and G below:Theorem 2 If E and G are an optimal encoder and generator, then E = G −1 almost everywhere; that is, G(E(x)) = x for P X -almost every x ∈ Ω X , and E(G(z)) = z for P Z -almost every z ∈ Ω Z .Proof. Let R 0 X := {x ∈ Ω X : x = G(E(x))} be the region of Ω X in which the inversion property x = G(E(x)) does not hold. We will show that, for optimal E and G, R 0 X has measure zero under P X (i.e., P X (R 0 X ) = 0) and therefore x = G(E(x)) holds P X -almost everywhere.X } be the region of Ω such that (x, E(x)) ∈ R 0 if and only if x ∈ R 0 X . We'll use the definitions of P EX and P GZ for deterministic E and G (Appendix A.3), and the fact that P EX = P GZ for optimal E and G (Theorem 1).Hence region R 0 0 X has measure zero (P X (R X ) = 0), and the inversion property x = G(E(x)) holds P X -almost everywhere.An analogous argument shows that R 0 Z := {z ∈ Ω Z : z = E(G(z))} has measure zero on P Z (i.e., P Z (R 0 Z ) = 0) and therefore z = E(G(z)) holds P Z -almost everywhere.As shown in Proposition 2 (Section 3), the BiGAN objective is equivalent to the Jensen-Shannon divergence between P EX and P GZ . We now go a step further and show that this Jensen-Shannon divergence is closely related to a standard autoencoder loss. Omitting the 1 2 scale factor, a KL divergence term of the Jensen-Shannon divergence is given aswhere we abbreviate as f the Radon-Nikodym derivative f EG := dP EX d(P EX +P GZ ) ∈ [0, 1] defined in Proposition 1 for most of this proof.We'll make use of the definitions of P EX and P GZ for deterministic E and G found in Appendix A.3. The integral term of the KL divergence expression given in (6) over a particular region R ⊆ Ω will be denoted byNext we will show that f &gt; 0 holds P EX -almost everywhere, and hence F is always well defined and finite. We then show that F is equivalent to an autoencoder-like reconstruction loss function.Proposition 3 f &gt; 0 P EX -almost everywhere.Proof. Let R f =0 := {(x, z) ∈ Ω : f (x, z) = 0} be the region of Ω in which f = 0. Using the definition of the Radon-Nikodym derivative f , the measureHence f &gt; 0 P EX -almost everywhere. Proposition 3 ensures that log f is defined P EX -almost everywhere, and F (R) is well-defined. Next we will show that F (R) mimics an autoencoder with 0 loss, meaning F is zero for any region in which G(E(x)) = x, and non-zero otherwise.The KL divergence F outside the support of P GZ is zero: F (Ω \ supp(P GZ )) = 0.We'll first show that in region R S := Ω \ supp(P GZ ), we have f = 1 P EX -almost everywhere. Let R f &lt;1 := {(x, z) ∈ R S : f (x, z) &lt; 1} be the region of R S in which f &lt; 1. Let's assume that P EX (R f &lt;1 ) &gt; 0 has non-zero measure. Then, using the definition of the Radon-Nikodym derivative, and G(E(x)) = x. (We can omit the x ∈ ˆ Ω X condition from inside an expectation over P X , as P X -almost all x / ∈ ˆ Ω X have 0 probability.) Therefore,Finally, with Propositions 3 and 5, we have f ∈ (0, 1) P EX -almost everywhere in R 1 , and therefore log f ∈ (−∞, 0), taking a finite and strictly negative value P EX -almost everywhere.An analogous argument (along with the fact that f EG + f GE = 1) lets us rewrite the other KL divergence termThe Jensen-Shannon divergence is the mean of these two KL divergences, giving C(E, G):In this section we provide additional details on the BiGAN learning protocol summarized in Sec- tion 3.4. Goodfellow et al. (2014) found for GAN training that an objective in which the real and generated labels Y are swapped provides stronger gradient signal to G. We similarly observed in BiGAN training that an "inverse" objective Λ (with the same fixed point characteristics as V ) provides stronger gradient signal to G and E, whereIn practice, θ G and θ E are updated by moving in the positive gradient direction of this inverse objective ∇ θ E ,θ G Λ, rather than the negative gradient direction of the original objective.We also observed that learning behaved similarly when all parameters θ D , θ G , θ E were updated simultaneously at each iteration rather than alternating between θ D updates and θ G , θ E updates, so we took the simultaneous updating (non-alternating) approach for computational efficiency. (For standard GAN training, simultaneous updates of θ D , θ G performed similarly well, so our standard GAN experiments also follow this protocol.)In the following sections we present additional details on the models and training protocols used in the permutation-invariant MNIST and ImageNet evaluations presented in Section 4.Optimization For unsupervised training of BiGANs and baseline methods, we use the Adam optimizer (Kingma &amp; Ba, 2015) to compute parameter updates, following the hyperparameters (initial step size α = 2 × 10 −4 , momentum β 1 = 0.5 and β 2 = 0.999) used by Radford et al. (2016). The step size α is decayed exponentially to α = 2 × 10 −6 starting halfway through training. The mini-batch size is 128. 2 weight decay of 2.5 × 10−5 is applied to all multiplicative weights in linear layers (but not to the learned bias β or scale γ parameters applied after batch normalization). Weights are initialized from a zero-mean normal distribution with a standard deviation of 0.02, with one notable exception: BiGAN discriminator weights that directly multiply z inputs to be added to spatial convolution outputs have initializations scaled by the convolution kernel size -e.g., for a 5 × 5 kernel, weights are initialized with a standard deviation of 0.5, 25 times the standard initialization.Software &amp; hardware We implement BiGANs and baseline feature learning methods using the Theano (Theano Development Team, 2016) framework, based on the convolutional GAN implemen- tation provided by Radford et al. (2016). ImageNet transfer learning experiments (Section 4.3) use the Caffe ( ) framework, per the Fast R-CNN (Girshick, 2015) and FCN (Long et al., 2015) reference implementations. Most computation is performed on an NVIDIA Titan X or Tesla K40 GPU.In all permutation-invariant MNIST experiments (Section 4.2), D, G, and E each consist of two hidden layers with 1024 units. The first hidden layer is followed by a non-linearity; the second is followed by (parameter-free) batch normalization (Ioffe &amp; Szegedy, 2015) and a non-linearity. The second hidden layer in each case is the input to a linear prediction layer of the appropriate size. In D and E, a leaky ReLU ( Maas et al., 2013) non-linearity with a "leak" of 0.2 is used; in G, a standard ReLU non-linearity is used. All models are trained for 400 epochs.In all ImageNet experiments (Section 4.3), the encoder E architecture follows AlexNet ( Krizhevsky et al., 2012) through the fifth and last convolution layer (conv5), with local response normalization (LRN) layers removed and batch normalization (Ioffe &amp; Szegedy, 2015) (including the learned scaling and bias) with leaky ReLU non-linearity applied to the output of each convolution at unsupervised training time. (For supervised evaluation, batch normalization is not used, and the pre-trained scale and bias is merged into the preceding convolution's weights and bias.)In most experiments, both the discriminator D and generator G architecture are those used by Radford et al. (2016), consisting of a series of four 5 × 5 convolutions (or "deconvolutions" -fractionally- strided convolutions -for the generator G) applied with 2 pixel stride, each followed by batch normalization and rectified non-linearity.The sole exception is our discriminator baseline feature learning experiment, in which we let the discriminator D be the AlexNet variant described above. Generally, using AlexNet (or similar convnet architecture) as the discriminator D is detrimental to the visual fidelity of the resulting generated images, likely due to the relatively large convolutional filter kernel size applied to the input image, as well as the max-pooling layers, which explicitly discard information in the input. However, for fair comparison of the discriminator's feature learning abilities with those of BiGANs, we use the same architecture as used in the BiGAN encoder.Preprocessing To produce a data sample x, we first sample an image from the database, and resize it proportionally such that its shorter edge has a length of 72 pixels. Then, a 64 × 64 crop is randomly selected from the resized image. The crop is flipped horizontally with probability  Nearest neighbors In Figure 5 we present nearest neighbors in the feature space of the BiGAN encoder E learned in unsupervised ImageNet training.
