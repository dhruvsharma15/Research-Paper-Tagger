Neural machine translation is a newly emerging approach to machine translation, recently proposed by Kalchbrenner and Blunsom (2013), Sutskever et al. (2014) and Cho et al. (2014b). Unlike the traditional phrase-based translation system (see, e.g., Koehn et al., 2003) which consists of many small sub-components that are tuned separately, neural machine translation attempts to build and train a single, large neural network that reads a sentence and outputs a correct translation.Most of the proposed neural machine translation models belong to a family of encoder- decoders ( Sutskever et al., 2014;Cho et al., 2014a), with an encoder and a decoder for each lan- guage, or involve a language-specific encoder applied to each sentence whose outputs are then com- pared ( Hermann and Blunsom, 2014). An encoder neural network reads and encodes a source sen- tence into a fixed-length vector. A decoder then outputs a translation from the encoded vector. The whole encoder-decoder system, which consists of the encoder and the decoder for a language pair, is jointly trained to maximize the probability of a correct translation given a source sentence.A potential issue with this encoder-decoder approach is that a neural network needs to be able to compress all the necessary information of a source sentence into a fixed-length vector. This may make it difficult for the neural network to cope with long sentences, especially those that are longer than the sentences in the training corpus. Cho et al. (2014b) showed that indeed the performance of a basic encoder-decoder deteriorates rapidly as the length of an input sentence increases.In order to address this issue, we introduce an extension to the encoder-decoder model which learns to align and translate jointly. Each time the proposed model generates a word in a translation, it (soft-)searches for a set of positions in a source sentence where the most relevant information is concentrated. The model then predicts a target word based on the context vectors associated with these source positions and all the previous generated target words.The most important distinguishing feature of this approach from the basic encoder-decoder is that it does not attempt to encode a whole input sentence into a single fixed-length vector. Instead, it en- codes the input sentence into a sequence of vectors and chooses a subset of these vectors adaptively while decoding the translation. This frees a neural translation model from having to squash all the information of a source sentence, regardless of its length, into a fixed-length vector. We show this allows a model to cope better with long sentences.In this paper, we show that the proposed approach of jointly learning to align and translate achieves significantly improved translation performance over the basic encoder-decoder approach. The im- provement is more apparent with longer sentences, but can be observed with sentences of any length. On the task of English-to-French translation, the proposed approach achieves, with a single model, a translation performance comparable, or close, to the conventional phrase-based system. Furthermore, qualitative analysis reveals that the proposed model finds a linguistically plausible (soft-)alignment between a source sentence and the corresponding target sentence.From a probabilistic perspective, translation is equivalent to finding a target sentence y that max- imizes the conditional probability of y given a source sentence x, i.e., arg max y p(y | x). In neural machine translation, we fit a parameterized model to maximize the conditional probability of sentence pairs using a parallel training corpus. Once the conditional distribution is learned by a translation model, given a source sentence a corresponding translation can be generated by searching for the sentence that maximizes the conditional probability.Recently, a number of papers have proposed the use of neural networks to directly learn this condi- tional distribution (see, e.g., Kalchbrenner and Blunsom, 2013;Cho et al., 2014a;Sutskever et al., 2014;Cho et al., 2014b;Forcada and˜Necoand˜ and˜Neco, 1997). This neural machine translation approach typ- ically consists of two components, the first of which encodes a source sentence x and the second decodes to a target sentence y. For instance, two recurrent neural networks (RNN) were used by (Cho et al., 2014a) and (Sutskever et al., 2014) to encode a variable-length source sentence into a fixed-length vector and to decode the vector into a variable-length target sentence.Despite being a quite new approach, neural machine translation has already shown promising results. Sutskever et al. (2014) reported that the neural machine translation based on RNNs with long short- term memory (LSTM) units achieves close to the state-of-the-art performance of the conventional phrase-based machine translation system on an English-to-French translation task.1 Adding neural components to existing translation systems, for instance, to score the phrase pairs in the phrase table (Cho et al., 2014a) or to re-rank candidate translations (Sutskever et al., 2014), has allowed to surpass the previous state-of-the-art performance level.Here, we describe briefly the underlying framework, called RNN Encoder-Decoder, proposed by Cho et al. (2014a) and Sutskever et al. (2014) upon which we build a novel architecture that learns to align and translate simultaneously.In the Encoder-Decoder framework, an encoder reads the input sentence, a sequence of vectors x = (x 1 , · · · , x Tx ), into a vector c. 2 The most common approach is to use an RNN such thatand c = q ({h 1 , · · · , h Tx }) , where h t ∈ R n is a hidden state at time t, and c is a vector generated from the sequence of the hidden states. f and q are some nonlinear functions. Sutskever et al. (2014) used an LSTM as f andThe decoder is often trained to predict the next word y t given the context vector c and all the previously predicted words {y 1 , · · · , y t −1 }. In other words, the decoder defines a probability over the translation y by decomposing the joint probability into the ordered conditionals:t=1 where y = y 1 , · · · , y Ty . With an RNN, each conditional probability is modeled aswhere g is a nonlinear, potentially multi-layered, function that outputs the probability of y t , and s t is the hidden state of the RNN. It should be noted that other architectures such as a hybrid of an RNN and a de-convolutional neural network can be used (Kalchbrenner and Blunsom, 2013).In this section, we propose a novel architecture for neural machine translation. The new architecture consists of a bidirectional RNN as an encoder (Sec. 3.2) and a decoder that emulates searching through a source sentence during decoding a translation (Sec. 3.1).In a new model architecture, we define each conditional probability in Eq. (2) as:  Figure 1: The graphical illus- tration of the proposed model trying to generate the t-th tar- get word y t given a source sentence (x 1 , x 2 , . . . , x T ).The context vector c i depends on a sequence of annotations (h 1 , · · · , h Tx ) to which an encoder maps the input sentence. Each annotation h i contains information about the whole input sequence with a strong focus on the parts surrounding the i-th word of the input sequence. We explain in detail how the annotations are com- puted in the next section.The context vector c i is, then, computed as a weighted sum of these annotations h i :The weight α ij of each annotation h j is computed bywhere e ij = a(s i−1 , h j ) is an alignment model which scores how well the inputs around position j and the output at position i match. The score is based on the RNN hidden state s i−1 (just before emitting y i , Eq. (4)) and the j-th annotation h j of the input sentence.We parametrize the alignment model a as a feedforward neural network which is jointly trained with all the other components of the proposed system. Note that unlike in traditional machine translation, the alignment is not considered to be a latent variable. Instead, the alignment model directly com- putes a soft alignment, which allows the gradient of the cost function to be backpropagated through. This gradient can be used to train the alignment model as well as the whole translation model jointly.We can understand the approach of taking a weighted sum of all the annotations as computing an expected annotation, where the expectation is over possible alignments. Let α ij be a probability that the target word y i is aligned to, or translated from, a source word x j . Then, the i-th context vector c i is the expected annotation over all the annotations with probabilities α ij .The probability α ij , or its associated energy e ij , reflects the importance of the annotation h j with respect to the previous hidden state s i−1 in deciding the next state s i and generating y i . Intuitively, this implements a mechanism of attention in the decoder. The decoder decides parts of the source sentence to pay attention to. By letting the decoder have an attention mechanism, we relieve the encoder from the burden of having to encode all information in the source sentence into a fixed- length vector. With this new approach the information can be spread throughout the sequence of annotations, which can be selectively retrieved by the decoder accordingly.The usual RNN, described in Eq. (1), reads an input sequence x in order starting from the first symbol x 1 to the last one x Tx . However, in the proposed scheme, we would like the annotation of each word to summarize not only the preceding words, but also the following words. Hence, we propose to use a bidirectional RNN (BiRNN, Schuster and Paliwal, 1997), which has been successfully used recently in speech recognition (see, e.g., Graves et al., 2013).− → f reads the input sequence as it is ordered (from x 1 to x Tx ) and calculates a sequence of forward hidden states (← − f reads the sequence in the reverse order (from x Tx to x 1 ), resulting in a sequence of backward hidden states (We obtain an annotation for each word x j by concatenating the forward hidden state − → h j and theIn this way, the annotation h j contains the summaries of both the preceding words and the following words. Due to the tendency of RNNs to better represent recent inputs, the annotation h j will be focused on the words around x j . This sequence of annotations is used by the decoder and the alignment model later to compute the context vector (Eqs. (5)- (6)).See Fig. 1 for the graphical illustration of the proposed model.We evaluate the proposed approach on the task of English-to-French translation. We use the bilin- gual, parallel corpora provided by ACL WMT '14.3 As a comparison, we also report the perfor- mance of an RNN Encoder-Decoder which was proposed recently by Cho et al. (2014a). We use the same training procedures and the same dataset for both models.  After a usual tokenization 6 , we use a shortlist of 30,000 most frequent words in each language to train our models. Any word not included in the shortlist is mapped to a special token ( [UNK]). We do not apply any other special preprocessing, such as lowercasing or stemming, to the data.We train two types of models. The first one is an RNN Encoder-Decoder (RNNencdec, Cho et al., 2014a), and the other is the proposed model, to which we refer as RNNsearch. We train each model twice: first with the sentences of length up to 30 words (RNNencdec-30, RNNsearch-30) and then with the sentences of length up to 50 word (RNNencdec-50, RNNsearch-50).The encoder and decoder of the RNNencdec have 1000 hidden units each. 7 The encoder of the RNNsearch consists of forward and backward recurrent neural networks (RNN) each having 1000 hidden units. Its decoder has 1000 hidden units. In both cases, we use a multilayer network with a single maxout ( Goodfellow et al., 2013) hidden layer to compute the conditional probability of each target word ( Pascanu et al., 2014).We use a minibatch stochastic gradient descent (SGD) algorithm together with Adadelta (Zeiler, 2012) to train each model. Each SGD update direction is computed using a minibatch of 80 sen- tences. We trained each model for approximately 5 days.Once a model is trained, we use a beam search to find a translation that approximately maximizes the conditional probability (see, e.g., Graves, 2012;Boulanger-Lewandowski et al., 2013). Sutskever et al. (2014) used this approach to generate translations from their neural machine translation model. For more details on the architectures of the models and training procedure used in the experiments, see Appendices A and B.In Table 1, we list the translation performances measured in BLEU score. It is clear from the table that in all the cases, the proposed RNNsearch outperforms the conventional RNNencdec. More importantly, the performance of the RNNsearch is as high as that of the conventional phrase-based translation system (Moses), when only the sentences consisting of known words are considered. This is a significant achievement, considering that Moses uses a separate monolingual corpus (418M words) in addition to the parallel corpora we used to train the RNNsearch and RNNencdec.  One of the motivations behind the proposed approach was the use of a fixed-length context vector in the basic encoder-decoder approach. We conjectured that this limitation may make the basic encoder-decoder approach to underperform with long sentences. In Fig. 2, we see that the perfor- mance of RNNencdec dramatically drops as the length of the sentences increases. On the other hand, both RNNsearch-30 and RNNsearch-50 are more robust to the length of the sentences. RNNsearch- 50, especially, shows no performance deterioration even with sentences of length 50 or more. This superiority of the proposed model over the basic encoder-decoder is further confirmed by the fact that the RNNsearch-30 even outperforms RNNencdec-50 (see Table 1).  Table 1: BLEU scores of the trained models com- puted on the test set. The second and third columns show respectively the scores on all the sentences and, on the sentences without any unknown word in them- selves and in the reference translations. Note that RNNsearch-50 was trained much longer until the performance on the development set stopped improv- ing. (•) We disallowed the models to generate [UNK] tokens when only the sentences having no unknown words were evaluated (last column).The proposed approach provides an intuitive way to inspect the (soft-)alignment between the words in a generated translation and those in a source sentence. This is done by visualizing the annotation weights α ij from Eq. (6), as in Fig. 3. Each row of a matrix in each plot indicates the weights associated with the annotations. From this we see which positions in the source sentence were considered more important when generating the target word.We can see from the alignments in Fig. 3 that the alignment of words between English and French is largely monotonic. We see strong weights along the diagonal of each matrix. However, we also observe a number of non-trivial, non-monotonic alignments. Adjectives and nouns are typically ordered differently between French and English, and we see an example in Fig. 3 (a). From this figure, we see that the model correctly translates a phrase [European Economic Area] into [zonézoné economique européen]. The RNNsearch was able to correctly align [zone] with [Area], jumping over the two words ( [European] and [Economic]), and then looked one word back at a time to complete the whole phrase [zoné economique européenne].The strength of the soft-alignment, opposed to a hard-alignment, is evident, for instance, from . We observe similar behaviors in all the presented cases in Fig. 3. An additional benefit of the soft align- ment is that it naturally deals with source and target phrases of different lengths, without requiring a counter-intuitive way of mapping some words to or from nowhere ( [NULL]) (see, e.g., Chapters 4 and 5 of Koehn, 2010).As clearly visible from Fig. 2 the proposed model (RNNsearch) is much better than the conventional model (RNNencdec) at translating long sentences. This is likely due to the fact that the RNNsearch does not require encoding a long sentence into a fixed-length vector perfectly, but only accurately encoding the parts of the input sentence that surround a particular word.As an example, consider this source sentence from the test set:An admitting privilege is the right of a doctor to admit a patient to a hospital or a medical centre to carry out a diagnosis or a procedure, based on his status as a health care worker at a hospital.The RNNencdec-50 translated this sentence into:Unpriviì ege d'admission est le droit d'un médecin de reconnaˆıtrereconnaˆıtre un patientàpatient`patientà l'hôpital ou un centre médical d'un diagnostic ou de prendre un diagnostic en fonction de sonétatson´sonétat de santé.The RNNencdec-50 correctly translated the source sentence until [a medical center]. However, from there on (underlined), it deviated from the original meaning of the source sentence. For instance, it replaced [based on his status as a health care worker at a hospital] in the source sentence with [en fonction de sonétatson´sonétat de santé] ("based on his state of health").On the other hand, the RNNsearch-50 generated the following correct translation, preserving the whole meaning of the input sentence without omitting any details:Unpriviì ege d'admission est le droit d'un médecin d'admettre un patientàpatient`patientà un hôpital ou un centre médical pour effectuer un diagnostic ou une procédure, selon son statut de travailleur des soins de santésanté`santéà l'hôpital.Let us consider another sentence from the test set:This kind of experience is part of Disney's efforts to "extend the lifetime of its series and build new relationships with audiences via digital platforms that are becoming ever more important," he added.The translation by the RNNencdec-50 isCe type d'expérience fait partie des initiatives du Disney pour "prolonger la durée de vie de ses nouvelles et de développer des liens avec les lecteurs numériques qui deviennent plus complexes.As with the previous example, the RNNencdec began deviating from the actual meaning of the source sentence after generating approximately 30 words (see the underlined phrase). After that point, the quality of the translation deteriorates, with basic mistakes such as the lack of a closing quotation mark.Again, the RNNsearch-50 was able to translate this long sentence correctly:Ce genre d'expérience fait partie des efforts de Disney pour "prolonger la durée de vie de ses séries et créer de nouvelles relations avec des publics via des plateformes numériques de plus en plus importantes", a-t-il ajouté.In conjunction with the quantitative results presented already, these qualitative observations con- firm our hypotheses that the RNNsearch architecture enables far more reliable translation of long sentences than the standard RNNencdec model.In Appendix C, we provide a few more sample translations of long source sentences generated by the RNNencdec-50, RNNsearch-50 and Google Translate along with the reference translations.A similar approach of aligning an output symbol with an input symbol was proposed recently by Graves (2013) in the context of handwriting synthesis. Handwriting synthesis is a task where the model is asked to generate handwriting of a given sequence of characters. In his work, he used a mixture of Gaussian kernels to compute the weights of the annotations, where the location, width and mixture coefficient of each kernel was predicted from an alignment model. More specifically, his alignment was restricted to predict the location such that the location increases monotonically.The main difference from our approach is that, in (Graves, 2013), the modes of the weights of the annotations only move in one direction. In the context of machine translation, this is a severe limi- tation, as (long-distance) reordering is often needed to generate a grammatically correct translation (for instance, English-to-German).Our approach, on the other hand, requires computing the annotation weight of every word in the source sentence for each word in the translation. This drawback is not severe with the task of translation in which most of input and output sentences are only 15-40 words. However, this may limit the applicability of the proposed scheme to other tasks.Since Bengio et al. (2003) introduced a neural probabilistic language model which uses a neural net- work to model the conditional probability of a word given a fixed number of the preceding words, neural networks have widely been used in machine translation. However, the role of neural net- works has been largely limited to simply providing a single feature to an existing statistical machine translation system or to re-rank a list of candidate translations provided by an existing system.For instance, Schwenk (2012) proposed using a feedforward neural network to compute the score of a pair of source and target phrases and to use the score as an additional feature in the phrase-based statistical machine translation system. More recently, Kalchbrenner andBlunsom (2013) andDevlin et al. (2014) reported the successful use of the neural networks as a sub-component of the existing translation system. Traditionally, a neural network trained as a target-side language model has been used to rescore or rerank a list of candidate translations (see, e.g., Schwenk et al., 2006).Although the above approaches were shown to improve the translation performance over the state- of-the-art machine translation systems, we are more interested in a more ambitious objective of designing a completely new translation system based on neural networks. The neural machine trans- lation approach we consider in this paper is therefore a radical departure from these earlier works.Rather than using a neural network as a part of the existing system, our model works on its own and generates a translation from a source sentence directly.The conventional approach to neural machine translation, called an encoder-decoder approach, en- codes a whole input sentence into a fixed-length vector from which a translation will be decoded. We conjectured that the use of a fixed-length context vector is problematic for translating long sen- tences, based on a recent empirical study reported by Cho et al. (2014b) and Pouget-Abadie et al. (2014).In this paper, we proposed a novel architecture that addresses this issue. We extended the basic encoder-decoder by letting a model (soft-)search for a set of input words, or their annotations com- puted by an encoder, when generating each target word. This frees the model from having to encode a whole source sentence into a fixed-length vector, and also lets the model focus only on information relevant to the generation of the next target word. This has a major positive impact on the ability of the neural machine translation system to yield good results on longer sentences. Unlike with the traditional machine translation systems, all of the pieces of the translation system, including the alignment mechanism, are jointly trained towards a better log-probability of producing correct translations.We tested the proposed model, called RNNsearch, on the task of English-to-French translation. The experiment revealed that the proposed RNNsearch outperforms the conventional encoder-decoder model (RNNencdec) significantly, regardless of the sentence length and that it is much more ro- bust to the length of a source sentence. From the qualitative analysis where we investigated the (soft-)alignment generated by the RNNsearch, we were able to conclude that the model can cor- rectly align each target word with the relevant words, or their annotations, in the source sentence as it generated a correct translation.Perhaps more importantly, the proposed approach achieved a translation performance comparable to the existing phrase-based statistical machine translation. It is a striking result, considering that the proposed architecture, or the whole family of neural machine translation, has only been proposed as recently as this year. We believe the architecture proposed here is a promising step toward better machine translation and a better understanding of natural languages in general.One of challenges left for the future is to better handle unknown, or rare words. This will be required for the model to be more widely used and to match the performance of current state-of-the-art machine translation systems in all contexts.A MODEL ARCHITECTURE A.1 ARCHITECTURAL CHOICESThe proposed scheme in Section 3 is a general framework where one can freely define, for instance, the activation functions f of recurrent neural networks (RNN) and the alignment model a. Here, we describe the choices we made for the experiments in this paper.For the activation function f of an RNN, we use the gated hidden unit recently proposed by Cho et al. (2014a). The gated hidden unit is an alternative to the conventional simple units such as an element-wise tanh. This gated unit is similar to a long short-term memory (LSTM) unit proposed earlier by Hochreiter and Schmidhuber (1997), sharing with it the ability to better model and learn long-term dependencies. This is made possible by having computation paths in the unfolded RNN for which the product of derivatives is close to 1. These paths allow gradients to flow backward easily without suffering too much from the vanishing effect (Hochreiter, 1991;Bengio et al., 1994;Pascanu et al., 2013a). It is therefore possible to use LSTM units instead of the gated hidden unit described here, as was done in a similar context by Sutskever et al. (2014).The new state s i of the RNN employing n gated hidden units 8 is computed bywhere • is an element-wise multiplication, and z i is the output of the update gates (see below). The proposed updated state˜sstate˜ state˜s i is computed by˜swhere e(y i−1 ) ∈ R m is an m-dimensional embedding of a word y i−1 , and r i is the output of the reset gates (see below). When y i is represented as a 1-of-K vector, e(y i ) is simply a column of an embedding matrix E ∈ R m×K . Whenever possible, we omit bias terms to make the equations less cluttered.The update gates z i allow each hidden unit to maintain its previous activation, and the reset gates r i control how much and what information from the previous state should be reset. We compute them bywhere σ (·) is a logistic sigmoid function.At each step of the decoder, we compute the output probability (Eq. (4)) as a multi-layered func- tion ( Pascanu et al., 2014). We use a single hidden layer of maxout units ( Goodfellow et al., 2013) and normalize the output probabilities (one for each word) with a softmax function (see Eq. (6)).The alignment model should be designed considering that the model needs to be evaluated T x × T y times for each sentence pair of lengths T x and T y . In order to reduce computation, we use a single- layer multilayer perceptron such thatwhere W a ∈ R n×n , U a ∈ R n×2n and v a ∈ R n are the weight matrices. Since U a h j does not depend on i, we can pre-compute it in advance to minimize the computational cost.A.2.1 ENCODER In this section, we describe in detail the architecture of the proposed model (RNNsearch) used in the experiments (see Sec. 4-5). From here on, we omit all bias terms in order to increase readability.The model takes a source sentence of 1-of-K coded word vectors as inputand outputs a translated sentence of 1-of-K coded word vectorswhere K x and K y are the vocabulary sizes of source and target languages, respectively. T x and T y respectively denote the lengths of source and target sentences.First, the forward states of the bidirectional recurrent neural network (BiRNN) are computed:whereare weight matrices. m and n are the word embedding dimensionality and the number of hidden units, respectively. σ(·) is as usual a logistic sigmoid function.The backward states (are computed similarly. We share the word embedding matrix E between the forward and backward RNNs, unlike the weight matrices.We concatenate the forward and backward states to to obtain the annotations (h 1 , h 2 , · · · , h Tx ), whereThe hidden state s i of the decoder given the annotations from the encoder is computed byE is the word embedding matrix for the target language. W, W z , W r ∈ R n×m , U, U z , U r ∈ R n×n , and C, C z , C r ∈ R n×2n are weights. Again, m and n are the word embedding dimensionality and the number of hidden units, respectively. The initial hidden state s 0 is computed by s 0 = tanhThe context vector c i are recomputed at each step by the alignment model:  Table 2: Learning statistics and relevant information. Each update corresponds to updating the parameters once using a single minibatch. One epoch is one pass through the training set. NLL is the average conditional log-probabilities of the sentences in either the training set or the development set. Note that the lengths of the sentences differ.whereand h j is the j-th annotation in the source sentence (see Eq. (7)). v a ∈ R n , W a ∈ R n ×n and U a ∈ R n ×2n are weight matrices. Note that the model becomes RNN Encoder-Decoder (ChoWith the decoder state s i−1 , the context c i and the last generated word y i−1 , we define the probability of a target word y i aswherej=1,...,l and˜tand˜ and˜t i,k is the k-th element of a vector˜tvector˜ vector˜t i which is computed by˜tare weight matrices. This can be under- stood as having a deep output ( Pascanu et al., 2014) with a single maxout hidden layer (Goodfellow et al., 2013).For all the models used in this paper, the size of a hidden layer n is 1000, the word embedding dimensionality m is 620 and the size of the maxout hidden layer in the deep output l is 500. The number of hidden units in the alignment model n is 1000.We initialized the recurrent weight matrices U, U z , U r ,and − → U r as random or- thogonal matrices. For W a and U a , we initialized them by sampling each element from the Gaussian distribution of mean 0 and variance 0.001 2 . All the elements of V a and all the bias vectors were ini- tialized to zero. Any other weight matrix was initialized by sampling from the Gaussian distribution of mean 0 and variance 0.01 2 .We used the stochastic gradient descent (SGD) algorithm. Adadelta (Zeiler, 2012) was used to automatically adapt the learning rate of each parameter ( = 10 −6 and ρ = 0.95). We explicitly normalized the L 2 -norm of the gradient of the cost function each time to be at most a predefined threshold of 1, when the norm was larger than the threshold ( Pascanu et al., 2013b). Each SGD update direction was computed with a minibatch of 80 sentences.At each update our implementation requires time proportional to the length of the longest sentence in a minibatch. Hence, to minimize the waste of computation, before every 20-th update, we retrieved 1600 sentence pairs, sorted them according to the lengths and split them into 20 minibatches. The training data was shuffled once before training and was traversed sequentially in this manner.In Tables 2 we present the statistics related to training all the models used in the experiments.Source An admitting privilege is the right of a doctor to admit a patient to a hospital or a medical centre to carry out a diagnosis or a procedure, based on his status as a health care worker at a hospital.Lepriviì ege d'admission est le droit d'un médecin, en vertu de son statut de membre soignant d'un hôpital, d'admettre un patient dans un hôpital ou un centre médical afin d'y délivrer un diagnostic ou un traitement. RNNenc-50Unpriviì ege d'admission est le droit d'un médecin de reconnaˆıtrereconnaˆıtre un patientàpatient`patientà l'hôpital ou un centre médical d'un diagnostic ou de prendre un diagnostic en fonction de sonétatson´sonétat de santé. RNNsearch-50 Unpriviì ege d'admission est le droit d'un médecin d'admettre un patientàpatient`patientà un hôpital ou un centre médical pour effectuer un diagnostic ou une procédure, selon son statut de travailleur des soins de santésanté`santéà l'hôpital. Google Translate Unpriviì ege admettre est le droit d'un médecin d'admettre un patient dans un hôpital ou un centre médical pour effectuer un diagnostic ou une procédure, fondée sur sa situation en tant que travailleur de soins de santé dans un hôpital.This kind of experience is part of Disney's efforts to "extend the lifetime of its series and build new relationships with audiences via digital platforms that are becoming ever more important," he added.Ce type d'expérience entre dans le cadre des efforts de Disney pour "´ etendre la durée de vie de ses séries et construire de nouvelles relations avec son public grâcè a des plateformes numériques qui sont de plus en plus importantes", a-t-il ajouté. RNNenc-50Ce type d'expérience fait partie des initiatives du Disney pour "prolonger la durée de vie de ses nouvelles et de développer des liens avec les lecteurs numériques qui deviennent plus com- plexes. RNNsearch-50 Ce genre d'expérience fait partie des efforts de Disney pour "prolonger la durée de vie de ses séries et créer de nouvelles relations avec des publics via des plateformes numériques de plus en plus importantes", a-t-il ajouté. Google Translate Ce genre d'expérience fait partie des efforts de DisneyàDisney`Disneyà "´ etendre la durée de vie de sa série et construire de nouvelles relations avec le public par le biais des plates-formes numériques qui deviennent de plus en plus important", at-il ajouté.In a press conference on Thursday, Mr Blair stated that there was nothing in this video that might constitute a "reasonable motive" that could lead to criminal charges being brought against the mayor.En conférence de presse, jeudi, M. Blair a affirmé qu'il n'y avait rien dans cette vidéo qui puisse constituer des "motifs raisonnables" pouvant mener au dépôt d'une accusation criminelle contre le maire. RNNenc-50Lors de la conférence de presse de jeudi, M. Blair a dit qu'il n'y avait rien dans cette vidéo qui pourrait constituer une "motivation raisonnable" pouvant entraˆınerentraˆıner des accusations criminelles portées contre le maire. RNNsearch-50 Lors d'une conférence de presse jeudi, M. Blair a déclaré qu'il n'y avait rien dans cette vidéo qui pourrait constituer un "motif raisonnable" qui pourrait conduirè a des accusations criminelles contre le maire. Google Translate Lors d'une conférence de presse jeudi, M. Blair a déclaré qu'il n'y avait rien dans cette vido qui pourrait constituer un "motif raisonnable" qui pourrait meneràmener`menerà des accusations criminelles portes contre le maire. Table 3: The translations generated by RNNenc-50 and RNNsearch-50 from long source sentences (30 words or more) selected from the test set. For each source sentence, we also show the gold- standard translation. The translations by Google Translate were made on 27 August 2014.
