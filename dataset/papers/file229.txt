Art forgery, which dates back more than two thousand years, has played a key role in the development of painting authentication. This task has been usually performed manually by art experts who have dedicated their lives to this profession. Their expertise amounted to using various characteristics other than what the human eye can see, including chemical analysis, spectrometry, and infrared or X-ray imaging. The infamous Vermeer forgery [12] attests, perhaps, most vividly to the challenges presented by painting authentication. Han van Meegeren used historical canvasses and managed to deceive art experts into believing that his painting was an au- thentic Vermeer. Only after being charged with treason and sentenced to death for selling another (forged) Vermeer, did he confess and was forced to create another painting to prove himself innocent of treason. A more recent case of painting au- thenticity involves the Pollock paintings found a decade ago in a storage locker in Wainscott, NY. The authenticity of these paintings was compromised on the basis of computer analysis of the paintings' fractal dimension [14]. This claim was sub- sequently disputed by analyzing childlike drawings that supposedly have the same fractal dimension as the Pollock paintings [3].In this paper we address the closely related problem of painting classification, i.e., the task of assigning a specific artist to a given painting (from a dataset of paintings by several artists). Note that the image authentication problem can be viewed as a binary image classification problem (i.e., determine whether or not a given painting was painted by a certain artist). Recent developments for both problem types have focused on preprocessing techniques of reducing the high dimensionality of visual 2 E.O. David, N.S. Netanyahu data to low-dimensional representations which can be manipulated towards image understanding.Levy et al. [9,10] applied feature extraction to paintings using generic image processing (IP) functions (e.g., fractal dimension, Fourier spectra coefficients, tex- ture coefficients, etc.), and restricted Boltzmann machines (RBM), followed by ge- netic algorithms (GA)-based learning of the weights of a weighted nearest neighbor (WNN) classifier [13]. Their approach achieved 90.44% classification accuracy for the 3-painter classification problem.In this paper we present the problem of painter classification and briefly survey recent research that has been conducted in the field. We then present our novel ap- proach, which uses convolutional autoencoders (CAE) instead of image processing based feature extraction. We subsequently use the trained CAE to initialize a con- volutional neural network (CNN) for supervised training on specific painters. The results demonstrate a substantial improvement over previous methods, improving the accuracy to 96.52%. This sets a new state-of-the-art for the painter classification problem,Image authentication is the task of determining whether or not a given painting was painted by a specific artist. The related task addressed by us, though, is image classification, i.e., the task of determining the artist of a given painting (from a certain group of artists). The input to our problem consists of painting images of the group of artists (several paintings of each artist), and our objective is to automatically classify a given painting. One of the difficulties in solving this problem is that we cannot define a certain set of rules that the painting has to conform to in order to classify it to the subgroup corresponding to the correct artist. For this reason, computer vision techniques which are capable of identifying shapes and objects in an image are not sufficiently effective for solving the problem.Formerly there have been attempts to harness the strength of image analysis tools to classify historical art paintings into categories of artists or genres. Levy et al. [9] used GA-based WNN with a set of 78 prevalent image features for classify- ing paintings by Rembrandt, Renoir, and van Gogh, obtaining 80% classification accuracy. In their later work [10], they augmented their approach by also adding 20 features using restricted Boltzmann machines (RBM) [2], improving the classifi- cation accuracy to 90.44%.Herik and Postma [15] surveyed image features relevant to the historic art do- main and concluded that neural network techniques combined with domain knowl- edge were most suitable to the task of automatic image classification. Under-drawing strokes in infrared reflectograms were analyzed by Kammerer et al. [4] in order to classify how and by what tools paintings are painted. Natural language processing techniques using a naive-Bayes classifier and the coefficients of a discrete cosine transform (DCT) were used by Keren [5] in order to classify local features in an image. Kroner et al. [7] classified drawings by using image histograms and pattern recognition methods.The above past research focused on specific image processing features tailored for specific datasets (such as ink paintings, infrared reflectograms, or black and white sketches). This domain-specific knowledge facilitates the exploitation of var- ious characteristics of the painting-specific domain.In the next section we present our convolutional autoencoder based approach, which does not incorporate any domain-specific knowledge, and in fact is operating solely on the raw pixel level.In recent years convolutional neural networks (CNN) [1,8,6] have outperformed con- ventional image processing methods in all computer vision related tasks they have been applied to. The architecture of a CNN typically includes several components which are stacked on top of each other: the convolutional layer, the max-pooling layer, which subsamples the data (e.g., for each 2 × 2 region selects only the maxi- mum value, thus resulting in four times reduction in size), and finally a classification layer (and usually several fully connected layers before the classification layer). Fig- ure 1 shows a typical CNN, Standards CNNs are usually used in a supervised framework, where a large training dataset (typically including at least many thousands of images per class) is available. Thus, using CNNs for end-to-end painter classification is problematic, due to a smaller number of training samples available per painter (usually from a few tens of paintings to at most a few hundred paintings for more prolific painters).Where small number of training samples are available, unsupervised pretraining has proven highly effective [2,16]. Unsupervised training methods using neural networks involve either the use of restricted Boltzmann machines (RBM) [2] which are trained using contrastive divergence, or autoencoders [16] which are training using standard backpropagation.The basic principle for all methods involves receiving an input x and mapping it to a latent representation h, using a function h = σ(W x + b), where σ is a nonlinear activation function, W is a matrix of weights between the two layers, and b is bias. The autoencoder then tries to reconstruct the original input by y = σ(W h + b ). Thus, each training sample x i is first mapped to a hidden layer h i and then reconstructed to y i . The autoencoder is trained using backpropagation to reduce this reconstruction error.The principles behind convolutional neural networks and autoencoders can be com- bined to produce convolutional autoencoders (CAE). Several approaches involving the combination of these methods have been explored in the past, and here we use a CAE architecture along the lines presented in [11,18,17].In order to use CNNs as autoencoders, for each convolutional layer, a corre- sponding deconvolutional layer should be constructed. Additionally, max-pooling layers result in loss of information, and so an unpooling layer should try to approx- imately restore the original values. Note that the subsampling due to max-pooling in fact operates as a strong regularizer.Deconvolution layers can either be equal but transposed to the original convo- lution layers, or learned from scratch. Often both approaches work equally well in practice. This is similar to standard autoencoders where the weights of the decoder layer W can either be learned from scratch, or set to the transpose of the encoder layer (W = W T ), this is referred to as tied weights. Several methods have been applied in the past for the unpooling operation [11,18,17]. Here we employ the method used in [18], where during pooling, the location of maximum value is stored, such that during unpooling the value is re- stored in that location, and the other locations are set to zero. Figure 2 illustrates unpooling, and Figure 3 shows a complete convolutional autoencoder structure.After training a CAE, we can remove the unpooling and deconvolution compo- nents, and use the convolution and pooling components to initialize a supervised CNN, by adding a fully connected layer followed by a classification layer.For unsupervised training of CAE, we use a randomly selected set of 5,000 paintings from the Webmuseum (webmuseum.meulie.net/wm). The images have 24-bit color depth with varying resolutions averaged approximately at 1000 × 1000 pixels, and compressed as JPEG formatted files. We have resampled the images and normalized them to 256 × 256 pixels. The goal here is to train the CAE to find features that are specifically useful for paintings, which have a more specific color and composition range in comparison to real-world images. Our CAE contains the following layers (see Figure 3). The convolution filter sizes are always of size 5 × 5.1. the input layer consists of the raw image (resampled to 256 × 256 pixels) in three channels (R, G, and B) 2. convolutional layer of size 100 × 256 × 256 3. max-pooling layer of size 2 × 2 4. convolutional layer of size 200 × 128 × 128 5. max-pooling layer of size 2 × 2 6. unpooling layer of size 2 × 2 7. deconvolutional layer of size 200 × 128 × 128 8. unpooling layer of size 2 × 2 9. deconvolutional layer of size 100 × 256 × 256The learning rate starts from 0.01 and is multiplied by 0.98 after each epoch. In order to further encourage the CAE to find meaningful features, we randomly remove 20% of the pixels for the images per epoch. The concept here is similar to that of denoising autoencoders [16] which outperform traditional autoencoders.The supervised classification benchmark is identical to that used by Levy et al. [9,10] in their experiments. It consists of (3×40 =) 120 digital reproductions of paint- ings by Rembrandt, Renoir, and van Gough, downloaded from the Webmuseum. The Appendix contains the painting titles of the images used in our experiments.Having trained a CAE, we can now remove the decoder components (items 6 to 9 in the above list) and use the CAE for initializing a supervised CNN. On top of these components due to CNN, we add two fully connected layers of size 400 and 200, followed by a softmax output unit of size three (since there are three painters in the benchmark). The cross entropy loss is used.The full CNN contains the following layers (see Figure 1):1. the input layer consists of the raw image (resampled to 256 × 256 pixels) in three channels (R, G, and B) 2. convolutional layer with 100 5 × 5 filters per input channel 3. max-pooling layer of size 2 × 2 4. convolutional layer with 200 5 × 5 filters per map 5. max-pooling layer of size 2 × 2 6. fully connected layer of size 400 7. fully connected layer of size 200 8. output softmax layer of size 3To make our results directly comparable to those of Levy et al. [9,10], we con- ducted 10-fold cross validation, where in each of 10 runs 90% of the data is used for training, and 10% for validation.After performing 10 such training and validation runs, the average accuracy obtained for our CNN over the validation set is 96.52%. This represents a 63% reduction in error rate in comparison to the previous state-of-the-art on this bench- mark, which stood at 90.44%. Table 1 provides a summary of the classification accuracies obtained by previous methods and our method. Automatic painter classification has gained much attention over the past decades, and much progress has been made with regards to both relevant preprocessing techniques and classification algorithms. Still, the problem of painter classification remains a complex task that requires more sophisticated techniques.The results presented in this paper show that deep learning methods can be effectively employed for painter classification. Specifically, our results show that convolutional autoencoders are capable of extracting meaningful information from paintings, and combined with supervised convolutional networks, we managed to substantially improve the previous state-of-the-art, from 90.44% accuracy (previous state-of-the-art) to 96.52% accuracy, i.e., a 63% reduction in error rate.
