One of the key factors in revitalizing deep neural networks [1][2][3][4] and their tremendous success is the significant growth in computational power. The proliferation of massively parallel computing devices such as graphics processing units (GPUs) and distributed computing has revolutionized the training and inference of deep neural networks due to their highly parallelizable nature. This in- credible rise in the computational power enables researchers to design and build increasingly larger and deeper neural networks to boost modeling accuracy. This on-going growth in architectural com- plexity, however, has become a bottleneck in the widespread adoption of such deep neural networks in many operational scenarios. For example, in many applications such as self-driving cars, smart- phone applications, and surveillance cameras, the computational resources are limited to low-power embedded GPUs, CPUs and deep learning accelerator chips with strong constraints on the memory usage. Furthermore, there are many situations where the use of cloud computing is intractable due to transmission cost, bandwidth issues, as well as privacy concerns.Considering the obstacles associated with the architectural complexity of deep neural networks, we have witnessed a growing attention towards learning highly efficient deep neural network architec- tures that are able to provide strong modeling power for operational scenarios where limited mem- ory and computational resources are available. One of the first approaches in this area is the optimal brain damage method [5] in which synapses are pruned based on their strength. Gong et al. [6] proposed a network compression framework where vector quantization is used to shrink the storage requirements of deep neural networks. Han et al. [7] utilized Huffman coding in addition to pruning and vector quantization to further reduce the memory requirements. Hashing is another related trick employed by Chen et al. [8] for network compression. Low-rank approximation [9][10][11] and sparsity learning [12][13][14] are other strategies used to build smaller and more efficient deep neural networks.Recently, Shafiee et al. [15] introduced an evolutionary synthesis framework to progressively learn more efficient deep neural networks along successive generations 1 . The proposed evolutionary deep intelligence approach mimics biological evolution mechanisms such as random mutation, natural se- lection, and heredity within a probabilistic graphical modeling paradigm to successively synthesize more efficient offspring network architectures. A crucial design factor in evolutionary deep intelli- gence is the genetic encoding scheme used to simulate heredity and affects the architectural traits that are passed to the offspring networks in a significant way. Therefore, a more effective genetic encoding scheme can enable better transfer of genetic information from the ancestor network to its offspring networks to build a more efficient yet powerful future generation.The introduced genetic encoding scheme in [15] merely considers the individual synaptic properties in the sense that the probability of synthesizing each synapse within the network is independent of the rest of the synapses and thus it ignores the dependence between different synapses. How- ever, there are neurobiological evidences that support the increasing probability of co-activation for correlated synapses which encode similar information and locate close to each other on the same dendrite-synaptic clustering [22][23][24][25][26]. Inspired by this observation, incorporating synaptic cluster- ing in the genetic encoding scheme of evolutionary deep models is potentially a fruitful direction to investigate. Moreover, synthesizing the offspring networks based on synaptic clusters (instead of basing it purely on individual synapses) can increase the efficiency of the offspring deep neural networks running on parallel computing devices such as GPUs and deep neural network accelerator chips.In this study, we take a deeper look at the notion of synaptic cluster-driven evolution of deep neu- ral networks which guides the evolution process towards the formation of a highly sparse set of synaptic clusters in the offspring networks. This process results in highly sparse offspring networks which are particularly tailored for parallel computing devices such as GPUs and deep neural net- work accelerator chips. We introduce a multi-factor genetic encoding scheme in which the synaptic probability considers both the probability of synthesis for the cluster of synapses that includes a par- ticular synapse and the probability of synthesis for that particular synapse within the cluster. This genetic encoding scheme effectively promotes the formation of synaptic clusters over successive generations during the evolution process while supporting the formation of highly efficient deep neural networks.Inspired by the neurobiological evidences, we propose a synaptic cluster-driven evolution framework for deep neural networks in which the ancestor network is guided towards the formation of a highly sparse set of synaptic clusters in the offspring networks. The key idea here is to design a genetic encoding scheme that considers the inter-synaptic relationships as well as the individual properties of each synapse. More formally, the synthesis probability distribution for each synapse is a product of the formation likelihood of the corresponding synaptic cluster and the synthesis probability of that particular synapse within that cluster.Evolutionary Deep Intelligence. Prior to describing the notion of synaptic cluster-driven evolu- tionary synthesis and the correspondingly proposed genetic encoding scheme, let us first provide an overview of the evolutionary deep intelligence framework introduced by Shafiee et al. [15] for synthesizing progressively more efficient deep neural networks over successive generations within a probabilistic graphical modeling paradigm. In the evolutionary deep intelligence framework, the architectural traits of ancestor deep neural networks are encoded via probabilistic 'DNA' sequences. New offspring networks possessing diverse network architectures are then synthesized stochastically based on the 'DNA' from the ancestor networks and probabilistic computational environmental fac- tor models, thus mimicking random mutation, heredity, and natural selection. These offspring net- works are then trained, much like one would train a newborn, and have more efficient, more diverse network architectures while achieving powerful modeling capabilities. A crucial design factor in evolutionary deep intelligence is the genetic encoding scheme used to mimic heredity, which can have a significant impact on the architecture of the evolved offspring networks. In this study, we aim at exploring more effective genetic encoding schemes to guide the synthesis process so that the modeling capabilities of the ancestor network are faithfully captured by the more efficient offspring networks along successive generations.Cluster-driven Genetic Encoding. Let the network architecture of a deep neural network be ex- pressed by H(N, S), with N denoting the set of possible neurons and S is the set of possible synapses in the network. Each neuron n i ∈ N is connected via a set of synapses ¯ s ⊂ S to neuron n j ∈ N such that the synaptic connectivity s i ∈ S is associated with a w i ∈ W denoting its strength. Given the network architecture at the previous generation, i.e., H g−1 , the architectural traits of a deep neural network in generation g, is encoded by the conditional probability P (H g |H g−1 ), which can be treated as the probabilistic 'DNA' sequence of a deep neural network.We assume that synaptic connectivity characteristics in an ancestor network are desirable traits to be inherited by the descendant networks. Therefore, the genetic information of a deep neural network is encoded in synaptic probability P (S g |W g−1 ), where w k,g−1 ∈ W g−1 is the synaptic strength of each synapse s k,g ∈ S g . In the proposed genetic encoding scheme for synaptic cluster-driven evolution, we aim at incorporating the neurobiological phenomenon of synaptic clustering [22][23][24][25][26], where the probability of synaptic co-activation increases for correlated synapses which encode sim- ilar information and are close together on the same dendrite.To promote the formation of synaptic clusters over successive generations of more efficient offspring networks, we introduce a multi-factor synaptic probability model defined as follows:where the first factor (first conditional probability) models the synthesis probability of a particular cluster of synapses, ¯ s g,c , while the second factor models the synthesis probability of a particular synapse, s g,i , within synaptic cluster c. More specifically, the probability P (¯ s g,c |W g−1 ) represents the likelihood that a particular synaptic cluster, ¯ s g,c , be synthesized as a part of the network archi- tecture in generation g given the synaptic strength in generation g − 1. For example, in a deep convolutional neural network, the synaptic cluster c can be any subset of synapses such as a kernel or a set of kernels within the deep neural network. The probability P (s g,i |w g−1,i ) represents the likelihood of existence of synapse i within the cluster c in generation g given its synaptic strength in generation g − 1. As such, the proposed synaptic probability model not only promotes the persis- tence of strong synaptic connectivity in offspring deep neural networks over successive generations, but also promotes the persistence of strong synaptic clusters in offspring deep neural networks over successive generations.Cluster-driven Evolutionary Synthesis. In the seminal paper on evolutionary deep intelligence by Shafiee et al. [15], the synthesis probability P (H g ) is composed of the synaptic probability P (S g |W g−1 ), which mimic heredity, and environmental factor model F (E) which mimic natural selection by introducing quantitative environmental conditions that offspring networks must adapt to:In this study, (2) is reformulated in a more general way to enable the incorporation of different quan- titative environmental factors over both the synthesis of synaptic clusters as well as each individual synapse, thus facilitating for synaptic cluster-driven evolution of deep neural networks:where F c (·) and F s (·) represents environmental factors enforced at the cluster and synapse levels, respectively.Realization of Cluster-driven Genetic Encoding. To demonstrate the benefits of the proposed cluster-driven genetic encoding scheme, a simple realization of this scheme is presented in this study.Here, since we wish to promote the persistence of strong synaptic clusters in offspring deep neural networks over successive generations, the synthesis probability of a particular cluster of synapses ¯ s g,c is modeled aswhere ⌊·⌋ encodes the truncation of a synaptic weight and Z is a normalization factor to make (4) a probability distribution, P ¯ s g,c |W g−1 ∈ [0, 1]. The truncation of synaptic weights in the model reduces the influence of very weak synapses within a synaptic cluster on the genetic en- coding process. The probability of a particular synapse, s g,i , within synaptic cluster c, denoted by P (s g,i = 1|w g−1,i ) can be expressed as:where z is a layer-wise normalization constant. By incorporating both of the aforementioned prob- abilities in the proposed scheme, the relationships amongst synapses as well as their individual synaptic strengths are taken into consideration in the genetic encoding process.To study the efficacy of synaptic cluster-driven evolution for synthesizing highly efficient deep neu- ral networks, evolutionary synthesis of deep neural networks across several generations was per- formed using the proposed genetic encoding scheme across four well-known deep neural network architectures for two different tasks:• Object categorization using three benchmark datasets: MNIST [27], STL-10 [28] and CI- FAR10 [29] • Object detection using one benchmark dataset: KITTI [30] For the MNIST and STL-10 experiments for object categorization, the LeNet-5 architecture [27] is selected as the network architecture of the original, first generation ancestor network. For the CIFAR10 experiment for object categorization, two different network architectures were explored as the first generation ancestor network. First, the AlexNet architecture [31] is utilized as one of the ancestor networks for CIFAR10, with the first layer modified to utilize 5 × 5 × 3 kernels instead of 11 × 11 × 3 kernels given the smaller image size in CIFAR10. Second, the ResNet-56 architec- ture [32] is utilized as another ancestor network for CIFAR10, which allows us to study the behaviour of the proposed scheme for two very different deep neural network architectures. For the KITTI ex- periment for object detection, the DetectNet architecture which is derived from GoogleNet [33] that is tuned for object detection is selected as the network architecture of the original, first generation ancestor network.The environmental factor model being imposed at different generations in this study is designed to form deep neural networks with progressively more efficient network architectures than its ancestor networks while maintaining modeling accuracy. More specifically, F c (·) and F s (·) is formulated in this study such that an offspring deep neural network should not have more than 80% of the total number of synapses in its direct ancestor network. Furthermore, in this study, each kernel in the deep neural network is considered as a synaptic cluster in the synapse probability model. In other words, the probability of the synthesis of a particular synaptic cluster (i.e, P (¯ s g,c |W g−1 )) is modeled as the truncated summation of the weights within a kernel.Architectural Efficiency Over Generations. In this study, offspring deep neural networks were synthesized in successive generations until the accuracy of the offspring network exceeded 4%, so that we can better study the changes in architectural efficiency in the descendant networks over mul- tiple generations. Table 1 and Table 2 show the architectural efficiency (defined in this study as the total number of synapses of the original, first-generation ancestor network divided by that of the current synthesized network) versus the modeling accuracy at several generations for three datasets and based on three different network architectures (LeNet-5, AlexNet, and ResNet-56). As observed Table 1: Architectural efficiency vs. test accuracy for different generations of synthesized networks for MNIST and STL-10 using LeNet-5. "Gen.", "A-E" and "ACC." denote generation, architectural efficiency, and accuracy, respectively.MNIST -LeNet-5 Gen.A-E ACC.STL-10 -LeNet-5Gen.A-E ACC.  Table 2: Architectural efficiency vs. test accuracy for different generations of synthesized networks for CIFAR-10 using AlexNet and ResNet-56. "Gen.", "A-E" and "ACC." denote generation, archi- tectural efficiency, and accuracy, respectively.Gen.A-E ACC.Gen.A-E ACC.  Table 1, the descendant network at the 13th generation for MNIST based on the LeNet-5 architec- ture was a staggering ∼125-fold more efficient than the original, first-generation ancestor network without exhibiting a significant drop in the test accuracy (∼1.7% drop). This trend was consistent with that observed with the STL-10 results based on the LeNet-5 architecture, where the descendant network at the 10th generation was ∼56-fold more efficient than the original, first-generation ances- tor network without a significant drop in test accuracy (∼1.2% drop). It also worth noting that since the training dataset of the STL-10 dataset is relatively small, the descendant networks at generations 2 to 8 actually achieved higher test accuracies when compared to the original, first-generation an- cestor network, which illustrates the generalizability of the descendant networks compared to the original ancestor network as the descendant networks had fewer parameters to train.For the case of CIFAR10 based on the AlexNet architecture, the descendant network at the 6th generation network was ∼14.4-fold more efficient than the original ancestor network with ∼2% drop in test accuracy. For the case of CIFAR10 based on the ResNet-56 architecture, the descendant network at the 7th generation network was ∼4-fold more efficient than the original ancestor network with ∼3% drop in test accuracy.Finally, Table 3 shows the architectural efficiency versus modeling accuracy at several generations for the KITTI dataset and based on the DetectNet architecture. For this case, the descendant network at the 11th generation was ∼10-fold more efficient compared to the original, first-generation ancestor network while achieving a ∼0.8% increase in precision and a ∼1.7% increase in recall. These results not only demonstrate the efficacy of the proposed scheme, but also illustrate the applicability of the proposed scheme for a variety of different network architectures.Cluster Efficiency. Table 4 and 5 shows the cluster efficiency of the synthesized deep neural net- works in the last generations, where cluster efficiency is defined in this study as the total number of kernels in a layer of the original, first-generation ancestor network divided by that of the current synthesized network. It can be observed that for MNIST, the cluster efficiency of the last-generation descendant network is ∼9.7X, which may result in a near 9.7-fold potential speed-up in running time on embedded GPUs and deep neural network accelerator chips by reducing the number of arithmetic operations by ∼9.7-fold compared to the first-generation ancestor network, though computational overhead in other layers such as ReLU may lead to a reduction in actual speed-up. The potential speed-up from the last-generation descendant network for STL-10 is lower compared to MNIST dataset, with the reported cluster efficiency in last-generation descendant network ∼6X.  Table 4: Cluster efficiency vs. test accuracy for the first and last reported generations of synthesized networks for MNIST and STL-10 using LeNet-5. "Gen.", "C-E" and "ACC." denote generation, cluster efficiency, and accuracy, respectively.MNIST -LeNet-5 Gen.C-E ACC.STL-10 -LeNet-5Gen.C-E ACC. The cluster efficiency for the last generation descendant networks for CIFAR10 using AlexNet and ResNet-56 are ∼2.8X and ∼2.25X, respectively. Finally, Table 6 demonstrates the cluster efficiency of the synthesized deep neural networks in the last generations for the KITTI dataset using Detect- Net. As seen, the cluster efficiency of the last generation descendent network is ∼8.16X, while achieving a ∼0.8% increase in precision and a ∼1.7% increase in recall compared to the original, first-generation ancestor network. These results demonstrate that not only can the proposed genetic encoding scheme promotes the synthesis of deep neural networks that are highly efficient yet main- tains modeling accuracy, but also promotes the formation of highly sparse synaptic clusters that make them highly tailored for devices designed for highly parallel computations such as GPUs and deep neural network accelerator chips.In this study, we took a deeper look at a synaptic cluster-driven strategy for the evolution of deep neural networks, where synaptic probability within a deep neural network is driven towards the for- mation of highly sparse synaptic clusters. Experimental results for the tasks of object categorization and object detection demonstrated that the synthesized 'evolved' offspring networks using this evo- lution strategy via a synaptic cluster-driven genetic encoding scheme can achieve state-of-the-art performance while having network architectures that are not only significantly more efficient com- pared to the original ancestor network, but also highly tailored for operational machine learning applications and scenarios using devices designed for highly parallel computations such as GPUs and deep neural network accelerator chips. Future work involves investigating alternative realiza- tions of this new genetic encoding scheme beyond the simple realization presented in this study, and study the network architecture evolutions of deep neural networks synthesized by these realizations over successive generations to better understand their effectiveness and efficiency. Table 5: Cluster efficiency vs. test accuracy for the first and last reported generations of synthe- sized networks for CIFAR-10 using AlexNet and ResNet-56. "Gen.", "C-E" and "ACC." denote generation, cluster efficiency, and accuracy, respectively.CIFAR10 -ResNet-56Gen.C-E ACC.Gen.C  Table 6: Cluster efficiency vs. precision and recall for the first and last reported generations of synthesized networks for KITTI using DetectNet. "Gen." and "C-E" denote generation and cluster efficiency, respectively.Gen.C 
