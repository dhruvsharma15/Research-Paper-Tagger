Neural networks with logistic sigmoid activations may look very similar to Bayesian networks of the same structure with logistic conditional distributions, aka sigmoid belief networks [11]. However, hidden units in NNs are deterministic and take on real values while hidden units in Bayesian networks are binary random variables with an associated distribution. Given enough capacity and training data, both models can estimate the posterior distribution of their output arbitrary well. Besides somewhat different modelling properties, there is a principled difference that with stochastic models it is possible to pose, at least theoretically, a number of inference and learning problems with missing data by marginalizing over latent and unobserved variables. Unfortunately, even forward inference in Bayesian networks requires methods such as sampling or optimization of a variational approximation. Likewise, in more tightly coupled graphical models such as deep Boltzmann machine (DBM) [16] or deep belief networks (DBN) [5,9] practically all computations needed e.g. for computing marginal and posterior probabilities are not tractable in the sense that approximations typically involve sampling or optimization.In this paper we propose stacked (deep) conditional independent model (DCIM). There are two views how the model can be defined. One, as a Bayesian network with logistic conditional distributions. The other, just assuming that conditional probabilities of a general Bayesian network factor over the parent nodes up to a normalising factor. With binary units this necessary implies that conditional probabilities are logistic. It is noteworthy that we find the same form of conditional probabilities in most of the neural probabilistic models: restricted Boltzmann machine, DBM [16], DBN [5], etc. When the units are arranged in layers, as in a typical DNN, the layered Bayesian network can be viewed as a Markov chain with a state space of all variables in a layer. In this view, all necessary assumptions can be summarized in one property, termed strong conditional independence that the forward conditional transition probabilities between the layers factorize over the dimensions of both the input and output state spaces of the transition up to a normalising factor. Making only this assumption, we show that a simple approximate Bayesian inference in DCIM recovers main constructive elements of DNNs: sigmoid and softmax activations with its real-valued variables corresponding to expectations of binary random variables. With this interpretation we can view DNN as a way of performing approximate inference very efficiently. To our knowledge, this relationship has not been established before. Under this approximation conditional likelihood learning of a DCIM is equivalent to that of DNN and can be performed by back-propagation.Our second objective is to propose an alternative, generative learning approach for DNNs. In a number of recent works [6,13,15,10] and in the prior work [4,5] a pair of deterministic recognition (encoder) and a stochastic generator (decoder) networks is trained. Let us denote x 0 the input of the recognition network, to be specific, an image, and x d (random variables at layer d) the output of the recognition network, the latent state. Although the two networks often are taken to have a symmetric structure [4,6], their parameters are decoupled. The stochastic generator network can typically only generate samples, but cannot directly evaluate its posterior distribution or the gradient thereof, requiring variational or sampling-based approximations. The methods proposed in [6,13] assume that samples generated from the same latent state x d must fall close together in the image space. This prohibits using categorical latent spaces such as digit class in MNIST because digits of the same class naturally may look differently. Instead, a model's own continuous latent space is used such that fixing a point in it defines both the class and the shape of the digit. Works [6,13] are thus restricted to unsupervised learning.Given full training data pairs of (x 0 , x d ), the recognition network could learn a distribution p(x d | x 0 ) and the generator network could in principle learn a distribution q(With our link between DNN and DCIM, we ask the question when the two DCIMs, modelling the two conditional distributions p() of the data and all hidden layers. It is the case when p(for some functions A, B. While this cannot be strictly satisfied with our strong conditional independence assumptions, we observe that most of the terms in the ratio cancel when we set the weights of recognition network p to be transposed of those of network q. Both models therefore can be efficiently represented by one and the same DNN, share its parameters and can be learned simultaneously by using an estimator similar to pseudo-likelihood. We further use the link between DNN and DCIM to approximately compute the posterior distribution in the generator network q(x d | x k ) given a sample of an inner layer x k . The approximation is reasonable when this posterior is expected to have a single mode, such as when reconstructing an image from lower level features. We thus can fully or partially avoid sampling in the generator model. We demonstrate in a tentative experiment that such a coupled pair can be learned simultaneously, modelling the full distribution of the data, and has enough capacity to perform well in both recognition and generation.Outline In Section 2.1 we consider strongly conditional independent model with two layers and derive the NN from it. This model will serve as a building block of DCIM formally introduced in Section 2.2. In Section 2.3 we consider coupled pairs of DCIMs and propose a novel approach for generative learning. In Section 2.4 we discuss more connections with related work. In Section 3 we propose our proof-of-concept experiments of generative learning using only DNN inference or sampling only a single layer.Let x = (x 1 , . . . , x n ) and y = (y 1 , . . . , y m ) be two collections of discrete random variables with. Without loss of generality, it can be written asThe functions u ij are arbitrary and Z j (x) denote the corresponding normalization constants. While sampling from p(y | x) is easy, computing p(y) by marginalizing over x is not tractable even if p(x) factorizes over the components of x.We consider the following approximation for the marginal distribution p(y):One of the possible ways to derive it, is to consider Taylor expansions for moments of functions of random variables. By using a linear embedding Φ such that i,j u ij (x i , y j ) = y), u where u is a vector with components u i,j (k, l), we can write p(y | x) in the formThe marginal distribution p(y) is obtained fromTaking the first order Taylor expansion w.r.t. the random variable Φ(x, y) for fixed y aroundand computing its expectation w.r.t. x gives (2) as the constant term, while the first order term vanishes. Example 1. Assume that random variables in the two collections x = (x 1 , . . . , x n ) and y = (y 1 , . . . , y m ) are {0, 1}-valued. Any function u ij (x i , y j ) of binary variables can be written asand thus can be omitted. The approximation (2) reads thenˆpthenˆ thenˆp(y) = j ˆ p(y j ) withwhere w j denotes the j-th row of the matrix W and ¯ x = E x∼p(x) x. This in turn leads to the following approximation for the expectation of y:where S is the logistic (sigmoid) function.If ±1 encoding is used instead to represent states of x and y, then the corresponding expressions readˆpandRemark 1. Let p(x, y) be a joint model such that p(y | x) is strongly conditional independent as above. Then p(x | y) is not in general conditional independent. If both conditional distributions are strongly conditional independent, then the joint model is a restricted Boltzmann machine or, what is the same, an MRF on a bipartite graph.be a sequence of collections of binary valued random variablesThe next observation highlights the difficulties that we run into if considering the deep Boltzmann machine model. and it follows thatwhere F (x k ) results from marginalisation over x k+1 , . . . , x d and can be arbitrarily complex.We will therefore consider a similar, but different class, for which the forward conditionals are (conditionally) independent. Definition 1. A joint distribution p(X ) for a sequence of collections of binary valued random variables (10) is a deep conditional independent model (DCIM) if it has the formk=1 and its forward conditionals p(x k | x k−1 ) are strongly conditional independent, i.e. have the form (1) for all k = 1, 2, . . . , d.A DCIM can be thus seen as an inhomogeneous Markov chain model with high dimensional state spaces x k ∈ X k , however with an yet unspecified distribution for x 0 . Given such a model and a realisation of x 0 , the posterior conditional distribution p(x d | x 0 ) can be computed by applying the approximation (2) recursively (see Example. 1). This leads to the recursionwhere ¯ x k denotes the expectation ofIt is obvious that the (approximate) computation of p(x d | x 0 ) for a DCIM is exactly the forward computation for a corresponding DNN. Hence, discriminative learning of a DCIM by maximizing the conditional likelihood p(x d | x 0 ) of training samples (x d , x 0 ) means to learn the corresponding DNN with the same loss.With 0-1 state variables the model is equivalent to a Bayesian network (a directed graphical model), in which the set of parents of a variable x k j is the preceding layer x k−1 (or its subset, depending on the structure of the weights) and the conditional distributions are of the form (1), i.e., logistic. Such networks were proposed by Neal [11] under the name sigmoid belief networks as a simpler alternative to Boltzmann machines. When we derive the model from the strong conditional independence assumption, it establishes a link to deep Boltzmann machines [16], which are graphical models factorizing over a d-partite graph.To learn a DCIM generatively from a given i.i.d. training data T , it is necessary to specify the joint model p(x 0 , . . . , x d ) and to choose an appropriate estimator. In theory, the DCIM model can be completed to a joint model by specifying a prior distribution p(x 0 ) over images and then the maximum likelihood estimator can be applied. It is however not realistic to model this complex multi-modal distribution in a closed form. We propose to circumvent this problem by applying the following bidirectional conditional likelihood estimator:because it avoids to model p(x 0 ) and p(x d ) explicitly.From the definition of a DCIM, and particularly from the fact that a DCIM is also a Markov chain model, follows that its reverse conditional distribution factorises similar as (13), i.e.k=0This holds for any p(x 0 ) completing the DCIM to a joint distribution. Unfortunately, however, the reverse conditionals p(x k | x k+1 ) of a DCIM are not (conditionally) independent. This follows from an argument similar to the one used in Observation 1. In order to resolve the problem, we propose to consider pairs of tightly connected DCIMs: a forward model and a reverse (i.e. backward) modelsuch that the forward conditionals of p and the backward conditionals of q are strongly (conditional) independent. Such a pair would give rise to a single joint distribution ifholds for any realisation of X for some functions A, B. We already know that this is impossible to achieve while retaining conditional independence of both, the forward and backward conditionals. Therefore, we propose to choose the parameters for two models such that the equation is fulfilled as close as possible. Substituting (1) for the binary case in the lhs of (19), giveswhere Z k and˜Zand˜ and˜Z k denote the partition functions of p(x k | x k−1 ) and q(x k | x k+1 ) respectively. It is readily seen that all terms in the exponentials cancel out if (V k−1 ) T = W k holds for the weights and b k = a k−1 holds for the biases. The remaining, not cancelling terms in the lhs of (19) are then the partition functions of the conditional distributions.Summarising, a pair of such DCIMs share the same structure as well as their weights and biases. They are therefore represented by a single DNN and can be learned simultaneously by the estimator (16), which now reads asSince both, the forward and backward conditionals are strongly independent, approximation (2) can be applied for computing the probabilities p(If the model consists of one layer only (d = 1), then the pair of p(x 1 | x 0 ) and q(x 0 | x 1 ) define a single joint distribution, which is an RBM, i.e. an MRF on a bipartite graph. The estimator (16) becomes the pseudo-likelihood estimator.We briefly discuss relations between the proposed model and other models not mentioned in the introduction.The connection between Bayesian networks and neural networks with injected noise, used in [7,13] is different from ours. It relates two equivalent representations of stochastic models, while we relate stochastic and deterministic models.Similar to our work, Hinton et al. [5] uses a constraint that generator and recognition networks are related by transposition of weights in the unsupervised, layer-by-layer pre-training phase, motivated by their study of deep Boltzmann machine. For the supervised fine-tuning the two models are decoupled.The proposed model is of course related to classical auto-encoders [14] at least technically. Our learning approach is generative, but in contrast to auto-encoders it is supervised. Moreover, the "decoding" part (the reverse model) is in our case constrained to have the same parameters as the "encoding" part (the forward model).Our model and the proposed generative learning approach are undoubtedly related to generative adversarial networks (GAN), [3], [12] proposed by Goodfellow et al. Similar to them, the reverse part of our model aims at generating data. But in contrast to them our model uses no specific "noise space" and conditions the image distribution on the class. The randomness in the generating part comes solely through the reverse Markov chain. We believe that this should suffice for modelling rich distributions in the input space. It is however to expect that the approximation (2) used for learning might impose limitations on the expressive power of this model part as compared with GANs (see experiments). Another difference is that our model is learned jointly with a "twin", i.e. the forward part, rather than in competition with an "adversarial".The first experiment is a simple proof of concept. We trained a small network (three fully connected layers with 512, 512, 10 nodes) on the standard MNIST dataset [8] for both learning approaches: the discriminative and the generative one. Sigmoid activation was chosen for all but the last layer, for which we used soft-max activation, i.e. considering its nodes as categorical variable. A standard optimiser without drop-out and any other regularisers was used for searching the maximum of the objective function. Fig. 1 shows the training and validation accuracies for both approaches as functions of the iterations. It is clearly seen that the combined objective (16) of the generative learning imposes only a rather insignificant drop of the classification accuracy. Fig. 1 also shows the training and validation loss of the the backward model.To further asses the reverse model learned by the generative approach, we sampled 10 images for each of the classes from both models. The results are shown in Fig. 2. For each sampled image we also applied the forward model to classify it. The classes with the highest probability along with values of that probability are shown on top of each sampled image. It is clearly seen that the generative learning approach has found a set of model parameters that yields simultaneously good classification accuracy and the ability to generate images of average digits. On the other hand, it is also visible from Fig. 2 that the generative model part learned only the mean shapes of the digits.  The second experiment intends to analyse the behaviour of the proposed generative learning approach for convolutional neural networks. We learned a deep CNN ( eight layers) with architecture ((3,1,32), (3,1,32), (2,2,32), (3,1,64), (3,1,64), (2,2,64), (50), (10)) on MNIST data. The components of the triplets denote the window size, stride and kernel number for convolutional layers. The singletons denote the size of dense layers. Sigmoid activation was used for all but the last layer. When using the objective (21), the net achieves 0.989 validation accuracy for the forward part and 0.23 loss for the reverse model part. We observed neither over-fitting nor "vanishing gradient" effects. We conjecture that the reverse learning task serves as a strong regulariser. The left tableaux in Fig. 3 shows images sampled from the reverse model part. Again, for better visibility, we sampled from the the distributionand then recursively computed the probabilities down to the image layer by applying the approximation (2). It is clearly seen that the learned generative model part is not able to capture the multi-modal image distribution. We conjecture that one of the possible reasons is the simplicity of the approximation (2), especially when applied for learning of the reverse model part.To analyse the problem, we considered a somewhat different learning objective for this model part  We proposed a class of probabilistic models that leads to a new statistical interpretation of DNNs in which all neurons of the net become random variables. In contrast to Boltzmann machines, this class allows for an efficient approximation when computing the distribution of the output variables conditioned on a realisation of the input variables. The computation itself becomes identical to the recursive forward computation for a DNN.The second objective of the paper, to design a generative learning approach for DCIMs, has been reached only partially. The proposed approach and its variants do allow to learn the forward and backward model parts simultaneously. However, the achievable expressive power of the backward part of the model is still inferior to GANs.Notwithstanding this, we believe that the presented approach opens interesting research directions. One of them is to analyse the proposed approximation and to search for better ones, leading to new and better activation functions. Another question in that direction is a statistical interpretation of the ReLu activation as the expectation of a possibly continuous random variable.A different direction calls for generalising DCIMs by introducing interactions between neurons in layers. This would lead to deep CRFs. We envision to learn such models, at least discriminatively, by using e.g. recent results for efficient marginal approximations of log-supermodular CRF.
